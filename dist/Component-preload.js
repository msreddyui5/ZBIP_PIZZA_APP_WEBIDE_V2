/**
* This file was auto-generated by SAP Web IDE build and includes all
* the source files required by SAPUI5 runtime for performance optimization.
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.
*/
jQuery.sap.registerPreloadedModules({
	"version": "2.0",
	"name": "pizza/Component-preload",
	"modules": {
		"pizza/controller/Detail.controller.js": "/*global location */\nsap.ui.define([\n\t\t\"pizza/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"pizza/model/formatter\"\n\t], function (BaseController, JSONModel, formatter) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"pizza.controller.Detail\", {\n\n\t\t\tformatter: formatter,\n\n\t\t\t/* =========================================================== */\n\t\t\t/* lifecycle methods                                           */\n\t\t\t/* =========================================================== */\n\n\t\t\tonInit : function () {\n\t\t\t\t// Model used to manipulate control states. The chosen values make sure,\n\t\t\t\t// detail page is busy indication immediately so there is no break in\n\t\t\t\t// between the busy indication for loading the view's meta data\n\t\t\t\tvar oViewModel = new JSONModel({\n\t\t\t\t\tbusy : false,\n\t\t\t\t\tdelay : 0,\n\t\t\t\t\tlineItemListTitle : this.getResourceBundle().getText(\"detailLineItemTableHeading\")\n\t\t\t\t});\n\n\t\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\n\n\t\t\t\tthis.setModel(oViewModel, \"detailView\");\n\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(this._onMetadataLoaded.bind(this));\n\t\t\t},\n\t\t\t\n\t\t\tonNavToSupplier: function(){\n\t\t\t\tvar xnavservice = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\t\t\t\txnavservice.toExternal({ target : { semanticObject : \"SupplierInvoice\", action: \"list\" }});\n\t\t\t},\n\t\t\t/* =========================================================== */\n\t\t\t/* event handlers                                              */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Event handler when the share by E-Mail button has been clicked\n\t\t\t * @public\n\t\t\t */\n\t\t\tonShareEmailPress : function () {\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t\tsap.m.URLHelper.triggerEmail(\n\t\t\t\t\tnull,\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailMessage\")\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler when the share in JAM button has been clicked\n\t\t\t * @public\n\t\t\t */\n\t\t\tonShareInJamPress : function () {\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\"),\n\t\t\t\t\toShareDialog = sap.ui.getCore().createComponent({\n\t\t\t\t\t\tname : \"sap.collaboration.components.fiori.sharing.dialog\",\n\t\t\t\t\t\tsettings : {\n\t\t\t\t\t\t\tobject :{\n\t\t\t\t\t\t\t\tid : location.href,\n\t\t\t\t\t\t\t\tshare : oViewModel.getProperty(\"/shareOnJamTitle\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\toShareDialog.open();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Updates the item count within the line item table's header\n\t\t\t * @param {object} oEvent an event containing the total number of items in the list\n\t\t\t * @private\n\t\t\t */\n\t\t\tonListUpdateFinished : function (oEvent) {\n\t\t\t\tvar sTitle,\n\t\t\t\t\tiTotalItems = oEvent.getParameter(\"total\"),\n\t\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\t\t// only update the counter if the length is final\n\t\t\t\tif (this.byId(\"lineItemsList\").getBinding(\"items\").isLengthFinal()) {\n\t\t\t\t\tif (iTotalItems) {\n\t\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeadingCount\", [iTotalItems]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Display 'Line Items' instead of 'Line items (0)'\n\t\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"detailLineItemTableHeading\");\n\t\t\t\t\t}\n\t\t\t\t\toViewModel.setProperty(\"/lineItemListTitle\", sTitle);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* begin: internal methods                                     */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path and expands the aggregated line items.\n\t\t\t * @function\n\t\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\n\t\t\t * @private\n\t\t\t */\n\t\t\t_onObjectMatched : function (oEvent) {\n\t\t\t\tvar sObjectId =  oEvent.getParameter(\"arguments\").objectId;\n\t\t\t\tthis.getModel().metadataLoaded().then( function() {\n\t\t\t\t\tvar sObjectPath = this.getModel().createKey(\"OrdersSet\", {\n\t\t\t\t\t\tOrderId :  sObjectId\n\t\t\t\t\t});\n\t\t\t\t\tthis._bindView(\"/\" + sObjectPath);\n\t\t\t\t}.bind(this));\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Binds the view to the object path. Makes sure that detail view displays\n\t\t\t * a busy indicator while data for the corresponding element binding is loaded.\n\t\t\t * @function\n\t\t\t * @param {string} sObjectPath path to the object to be bound to the view.\n\t\t\t * @private\n\t\t\t */\n\t\t\t_bindView : function (sObjectPath) {\n\t\t\t\t// Set busy indicator during view binding\n\t\t\t\tvar oViewModel = this.getModel(\"detailView\");\n\n\t\t\t\t// If the view was not bound yet its not busy, only if the binding requests data it is set to busy again\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\n\t\t\t\tthis.getView().bindElement({\n\t\t\t\t\tpath : sObjectPath,\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tchange : this._onBindingChange.bind(this),\n\t\t\t\t\t\tdataRequested : function () {\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tdataReceived: function () {\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t_onBindingChange : function () {\n\t\t\t\tvar oView = this.getView(),\n\t\t\t\t\toElementBinding = oView.getElementBinding();\n\n\t\t\t\t// No data for the binding\n\t\t\t\tif (!oElementBinding.getBoundContext()) {\n\t\t\t\t\tthis.getRouter().getTargets().display(\"detailObjectNotFound\");\n\t\t\t\t\t// if object could not be found, the selection in the master list\n\t\t\t\t\t// does not make sense anymore.\n\t\t\t\t\tthis.getOwnerComponent().oListSelector.clearMasterListSelection();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar sPath = oElementBinding.getPath(),\n\t\t\t\t\toResourceBundle = this.getResourceBundle(),\n\t\t\t\t\toObject = oView.getModel().getObject(sPath),\n\t\t\t\t\tsObjectId = oObject.OrderId,\n\t\t\t\t\tsObjectName = oObject.CustomerName,\n\t\t\t\t\toViewModel = this.getModel(\"detailView\");\n\n\t\t\t\tthis.getOwnerComponent().oListSelector.selectAListItem(sPath);\n\n\t\t\t\toViewModel.setProperty(\"/saveAsTileTitle\",oResourceBundle.getText(\"shareSaveTileAppTitle\", [sObjectName]));\n\t\t\t\toViewModel.setProperty(\"/shareOnJamTitle\", sObjectName);\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\n\t\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailMessage\",\n\t\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\n\t\t\t},\n\n\t\t\t_onMetadataLoaded : function () {\n\t\t\t\t// Store original busy indicator delay for the detail view\n\t\t\t\tvar iOriginalViewBusyDelay = this.getView().getBusyIndicatorDelay(),\n\t\t\t\t\toViewModel = this.getModel(\"detailView\"),\n\t\t\t\t\toLineItemTable = this.byId(\"lineItemsList\"),\n\t\t\t\t\tiOriginalLineItemTableBusyDelay = oLineItemTable.getBusyIndicatorDelay();\n\n\t\t\t\t// Make sure busy indicator is displayed immediately when\n\t\t\t\t// detail view is displayed for the first time\n\t\t\t\toViewModel.setProperty(\"/delay\", 0);\n\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", 0);\n\n\t\t\t\toLineItemTable.attachEventOnce(\"updateFinished\", function() {\n\t\t\t\t\t// Restore original busy indicator delay for line item table\n\t\t\t\t\toViewModel.setProperty(\"/lineItemTableDelay\", iOriginalLineItemTableBusyDelay);\n\t\t\t\t});\n\n\t\t\t\t// Binding the view will set it to not busy - so the view is always busy if it is not bound\n\t\t\t\toViewModel.setProperty(\"/busy\", true);\n\t\t\t\t// Restore original busy indicator delay for the detail view\n\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalViewBusyDelay);\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/view/ViewSettingsDialog.fragment.xml": "<core:FragmentDefinition\n\txmlns=\"sap.m\"\n\txmlns:core=\"sap.ui.core\">\n\n\t<ViewSettingsDialog\n\t\tid=\"viewSettingsDialog\"\n\t\tconfirm=\"onConfirmViewSettingsDialog\"\n\t\tresetFilters=\"onViewSettingsDialogResetFilters\">\n\t\t<filterItems>\n\t\t\t<ViewSettingsFilterItem\n\t\t\t\tid=\"filterItems\"\n\t\t\t\ttext=\"{i18n>masterFilterName}\"\n\t\t\t\tkey=\"Price\"\n\t\t\t\tmultiSelect=\"false\">\n\t\t\t\t<items>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\ttext=\"{i18n>masterFilter1}\"\n\t\t\t\t\t\tkey=\"Filter1\"\n\t\t\t\t\t\tid=\"viewFilter1\"/>\n\t\t\t\t\t<ViewSettingsItem\n\t\t\t\t\t\ttext=\"{i18n>masterFilter2}\"\n\t\t\t\t\t\tkey=\"Filter2\"\n\t\t\t\t\t\tid=\"viewFilter2\"/>\n\t\t\t\t</items>\n\t\t\t</ViewSettingsFilterItem>\n\t\t</filterItems>\n\t</ViewSettingsDialog>\n\n</core:FragmentDefinition>",
		"pizza/view/Detail.view.xml": "<mvc:View xmlns=\"sap.m\" xmlns:mvc=\"sap.ui.core.mvc\" xmlns:semantic=\"sap.m.semantic\" xmlns:footerbar=\"sap.ushell.ui.footerbar\" controllerName=\"pizza.controller.Detail\">\n\n\t<semantic:DetailPage id=\"page\" navButtonPress=\"onNavBack\" showNavButton=\"{device>/system/phone}\" title=\"{i18n>detailTitle}\" busy=\"{detailView>/busy}\" busyIndicatorDelay=\"{detailView>/delay}\">\n\n\t\t<semantic:content>\n\t\t\t<ObjectHeader id=\"objectHeader\" title=\"{CustomerName}\" number=\"{      path: 'TotalAmount',      formatter: '.formatter.currencyValue'     }\" numberUnit=\"{Currency}\">\n\t\t\t</ObjectHeader>\n\t\t\t<IconTabBar id=\"iconTabBar\" class=\"sapUiResponsiveContentPadding\">\n\t\t\t\t<items>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter1\" icon=\"sap-icon://hint\" tooltip=\"{i18n>detailIconTabBarInfo}\">\n\t\t\t\t\t<content>\n\t\t\t\t\t    <Button text=\"Nav to Supplier Invoice 2\" id=\"__button1\" press=\"onNavToSupplier\"/>\n\t\t\t\t\t</content>\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t\t<IconTabFilter id=\"iconTabBarFilter2\" icon=\"sap-icon://attachment\" tooltip=\"{i18n>detailIconTabBarAttachments}\">\n\t\t\t\t\t</IconTabFilter>\n\t\t\t\t</items>\n\t\t\t</IconTabBar>\n\t\t\t<Table id=\"lineItemsList\" width=\"auto\" items=\"{NavOrderItems}\" updateFinished=\"onListUpdateFinished\" noDataText=\"{i18n>detailLineItemTableNoDataText}\" busyIndicatorDelay=\"{detailView>/lineItemTableDelay}\" class=\"sapUiResponsiveMargin\">\n\t\t\t\t<headerToolbar>\n\t\t\t\t\t<Toolbar id=\"lineItemsToolbar\">\n\t\t\t\t\t\t<Title id=\"lineItemsHeader\" text=\"{detailView>/lineItemListTitle}\"/>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</headerToolbar>\n\t\t\t\t<columns>\n\t\t\t\t\t<Column>\n\t\t\t\t\t\t<Text text=\"{i18n>detailLineItemTableIDColumn}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t\t<Column minScreenWidth=\"Tablet\" demandPopin=\"true\" hAlign=\"Right\">\n\t\t\t\t\t\t<Text text=\"{i18n>detailLineItemTableUnitNumberColumn}\"/>\n\t\t\t\t\t</Column>\n\t\t\t\t</columns>\n\t\t\t\t<items>\n\t\t\t\t\t<ColumnListItem>\n\t\t\t\t\t\t<cells>\n\t\t\t\t\t\t\t<ObjectIdentifier title=\"{ItemNo}\" text=\"{ItemId}\"/>\n\t\t\t\t\t\t\t<ObjectNumber number=\"{          path: 'Qty',          formatter: '.formatter.currencyValue'         }\" unit=\"{Uom}\"/>\n\t\t\t\t\t\t</cells>\n\t\t\t\t\t</ColumnListItem>\n\t\t\t\t</items>\n\t\t\t</Table>\n\t\t</semantic:content>\n\n\t\t<semantic:sendEmailAction>\n\t\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\n\t\t</semantic:sendEmailAction>\n\n\t\t<semantic:shareInJamAction>\n\t\t\t<semantic:ShareInJamAction id=\"shareInJam\" visible=\"{FLP>/isShareInJamActive}\" press=\"onShareInJamPress\"/>\n\t\t</semantic:shareInJamAction>\n\n\t\t<semantic:saveAsTileAction>\n\t\t\t<footerbar:AddBookmarkButton id=\"shareTile\" title=\"{detailView>/saveAsTileTitle}\"/>\n\t\t</semantic:saveAsTileAction>\n\n\t</semantic:DetailPage>\n\n</mvc:View>",
		"pizza/Component.js": "sap.ui.define([\n\t\t\"sap/ui/core/UIComponent\",\n\t\t\"sap/ui/Device\",\n\t\t\"pizza/model/models\",\n\t\t\"pizza/controller/ListSelector\",\n\t\t\"pizza/controller/ErrorHandler\"\n\t], function (UIComponent, Device, models, ListSelector, ErrorHandler) {\n\t\t\"use strict\";\n\n\t\treturn UIComponent.extend(\"pizza.Component\", {\n\n\t\t\tmetadata : {\n\t\t\t\tmanifest : \"json\"\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t\t * In this method, the FLP and device models are set and the router is initialized.\n\t\t\t * @public\n\t\t\t * @override\n\t\t\t */\n\t\t\tinit : function () {\n\t\t\t\tthis.oListSelector = new ListSelector();\n\t\t\t\tthis._oErrorHandler = new ErrorHandler(this);\n\n\t\t\t\t// set the device model\n\t\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\n\t\t\t\t// set the FLP model\n\t\t\t\tthis.setModel(models.createFLPModel(), \"FLP\");\n\n\t\t\t\t// call the base component's init function and create the App view\n\t\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t\t// create the views based on the url/hash\n\t\t\t\tthis.getRouter().initialize();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The component is destroyed by UI5 automatically.\n\t\t\t * In this method, the ListSelector and ErrorHandler are destroyed.\n\t\t\t * @public\n\t\t\t * @override\n\t\t\t */\n\t\t\tdestroy : function () {\n\t\t\t\tthis.oListSelector.destroy();\n\t\t\t\tthis._oErrorHandler.destroy();\n\t\t\t\t// call the base component's destroy function\n\t\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n\t\t\t * design mode class should be set, which influences the size appearance of some controls.\n\t\t\t * @public\n\t\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n\t\t\t */\n\t\t\tgetContentDensityClass : function() {\n\t\t\t\tif (this._sContentDensityClass === undefined) {\n\t\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\n\t\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\n\t\t\t\t\t\tthis._sContentDensityClass = \"\";\n\t\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if touch is not supported\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this._sContentDensityClass;\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/view/DetailObjectNotFound.view.xml": "<mvc:View\n\tcontrollerName=\"pizza.controller.BaseController\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\tid=\"page\"\n\t\ttitle=\"{i18n>detailTitle}\"\n\t\ttext=\"{i18n>noObjectFoundText}\"\n\t\ticon=\"{sap-icon://product}\"\n\t\tdescription=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"pizza/view/DetailNoObjectsAvailable.view.xml": "<mvc:View\n\tcontrollerName=\"pizza.controller.BaseController\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\tid=\"page\"\n\t\ttitle=\"{i18n>notAvailableViewTitle}\"\n\t\ttext=\"{i18n>noObjectsAvailableText}\"\n\t\ticon=\"{sap-icon://product}\"\n\t\tdescription=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"pizza/view/Master.view.xml": "<mvc:View\n\tcontrollerName=\"pizza.controller.Master\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns:core=\"sap.ui.core\"\n\txmlns=\"sap.m\"\n\txmlns:semantic=\"sap.m.semantic\">\n\n\t<semantic:MasterPage\n\t\tid=\"page\"\n\t\ttitle=\"{masterView>/title}\"\n\t\tnavButtonPress=\"onNavBack\"\n\t\tshowNavButton=\"true\">\n\t\t<semantic:subHeader>\n\t\t\t<Bar id=\"headerBar\">\n\t\t\t\t<contentMiddle>\n\t\t\t\t\t<SearchField\n\t\t\t\t\t\tid=\"searchField\"\n\t\t\t\t\t\tshowRefreshButton=\"{= !${device>/support/touch} }\"\n\t\t\t\t\t\ttooltip=\"{i18n>masterSearchTooltip}\"\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\tsearch=\"onSearch\">\n\t\t\t\t\t</SearchField>\n\t\t\t\t</contentMiddle>\n\t\t\t</Bar>\n\t\t</semantic:subHeader>\n\n\t\t<semantic:content>\n\t\t\t<PullToRefresh\n\t\t\t\tid=\"pullToRefresh\"\n\t\t\t\tvisible=\"{device>/support/touch}\"\n\t\t\t\trefresh=\"onRefresh\" />\n\t\t\t<!-- For client side filtering add this to the items attribute:  parameters: {operationMode: 'Client'}}\" -->\n\t\t\t<List\n\t\t\t\tid=\"list\"\n\t\t\t\titems=\"{\n\t\t\t\t\tpath: '/OrdersSet',\n\t\t\t\t\tsorter: {\n\t\t\t\t\t\tpath: 'CustomerName',\n\t\t\t\t\t\tdescending: false\n\t\t\t\t\t\t},\n\t\t\t\t\tgroupHeaderFactory: '.createGroupHeader'\n\t\t\t\t}\"\n\t\t\t\tbusyIndicatorDelay=\"{masterView>/delay}\"\n\t\t\t\tnoDataText=\"{masterView>/noDataText}\"\n\t\t\t\tmode=\"{= ${device>/system/phone} ? 'None' : 'SingleSelectMaster'}\"\n\t\t\t\tgrowing=\"true\"\n\t\t\t\tgrowingScrollToLoad=\"true\"\n\t\t\t\tupdateFinished=\"onUpdateFinished\"\n\t\t\t\tselectionChange=\"onSelectionChange\">\n\t\t\t\t<infoToolbar>\n\t\t\t\t\t<Toolbar\n\t\t\t\t\t\tactive=\"true\"\n\t\t\t\t\t\tid=\"filterBar\"\n\t\t\t\t\t\tvisible=\"{masterView>/isFilterBarVisible}\"\n\t\t\t\t\t\tpress=\"onOpenViewSettings\">\n\t\t\t\t\t\t<Title\n\t\t\t\t\t\t\tid=\"filterBarLabel\"\n\t\t\t\t\t\t\ttext=\"{masterView>/filterBarLabel}\" />\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</infoToolbar>\n\t\t\t\t<items>\n\t\t\t\t\t<ObjectListItem\n\t\t\t\t\t\ttype=\"{= ${device>/system/phone} ? 'Active' : 'Inactive'}\"\n\t\t\t\t\t\tpress=\"onSelectionChange\"\n\t\t\t\t\t\ttitle=\"{CustomerName}\"\n\t\t\t\t\t\tnumber=\"{\n\t\t\t\t\t\t\tpath: 'TotalAmount',\n\t\t\t\t\t\t\tformatter: '.formatter.currencyValue'\n\t\t\t\t\t\t}\"\n\t\t\t\t\t\tnumberUnit=\"{Currency}\">\n\t\t\t\t\t</ObjectListItem>\n\t\t\t\t</items>\n\t\t\t</List>\n\t\t</semantic:content>\n\n\t\t<semantic:sort>\n\t\t\t<semantic:SortSelect\n\t\t\t\tid=\"sort\"\n\t\t\t\tselectedKey=\"{masterView>/sortBy}\"\n\t\t\t\tchange=\"onSort\">\n\t\t\t\t<core:Item\n\t\t\t\t\tid=\"masterSort1\"\n\t\t\t\t\tkey=\"CustomerName\"\n\t\t\t\t\ttext=\"{i18n>masterSort1}\"/>\n\t\t\t\t<core:Item\n\t\t\t\t\tid=\"masterSort2\"\n\t\t\t\t\tkey=\"TotalAmount\"\n\t\t\t\t\ttext=\"{i18n>masterSort2}\"/>\n\t\t\t</semantic:SortSelect>\n\t\t</semantic:sort>\n\n\t\t<semantic:filter>\n\t\t\t<semantic:FilterAction\n\t\t\t\tid=\"filter\"\n\t\t\t\tpress=\"onOpenViewSettings\" />\n\t\t</semantic:filter>\n\n\t\t<semantic:group>\n\t\t\t<semantic:GroupSelect\n\t\t\t\tid=\"group\"\n\t\t\t\tselectedKey=\"{masterView>/groupBy}\"\n\t\t\t\tchange=\"onGroup\">\n\t\t\t\t<core:Item\n\t\t\t\t\tid=\"masterGroupNone\"\n\t\t\t\t\tkey=\"None\"\n\t\t\t\t\ttext=\"{i18n>masterGroupNone}\"/>\n\t\t\t\t<core:Item\n\t\t\t\t\tid=\"masterGroup1\"\n\t\t\t\t\tkey=\"TotalAmount\"\n\t\t\t\t\ttext=\"{i18n>masterGroup1}\"/>\n\t\t\t</semantic:GroupSelect>\n\t\t</semantic:group>\n\n\t</semantic:MasterPage>\n\n</mvc:View>",
		"pizza/view/App.view.xml": "<mvc:View\n\tcontrollerName=\"pizza.controller.App\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\tdisplayBlock=\"true\"\n\tbusy=\"{appView>/busy}\"\n\tbusyIndicatorDelay=\"{appView>/delay}\"\n\txmlns=\"sap.m\">\n\t<SplitApp id=\"idAppControl\" />\n</mvc:View>",
		"pizza/view/NotFound.view.xml": "<mvc:View\n\tcontrollerName=\"pizza.controller.BaseController\"\n\txmlns:mvc=\"sap.ui.core.mvc\"\n\txmlns=\"sap.m\">\n\n\t<MessagePage\n\t\tid=\"page\"\n\t\ttitle=\"{i18n>notFoundTitle}\"\n\t\ttext=\"{i18n>notFoundText}\"\n\t\ticon=\"{sap-icon://document}\"\n\t\tdescription=\"\"\n\t\tshowNavButton=\"{device>/system/phone}\"\n\t\tnavButtonPress=\"onNavBack\">\n\t</MessagePage>\n\n</mvc:View>",
		"pizza/controller/ErrorHandler.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\",\n\t\t\"sap/m/MessageBox\"\n\t], function (UI5Object, MessageBox) {\n\t\t\"use strict\";\n\n\t\treturn UI5Object.extend(\"pizza.controller.ErrorHandler\", {\n\n\t\t\t/**\n\t\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\n\t\t\t * @class\n\t\t\t * @param {sap.ui.core.UIComponent} oComponent reference to the app's component\n\t\t\t * @public\n\t\t\t * @alias pizza.controller.ErrorHandler\n\t\t\t */\n\t\t\tconstructor : function (oComponent) {\n\t\t\t\tthis._oResourceBundle = oComponent.getModel(\"i18n\").getResourceBundle();\n\t\t\t\tthis._oComponent = oComponent;\n\t\t\t\tthis._oModel = oComponent.getModel();\n\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\n\n\t\t\t\tthis._oModel.attachMetadataFailed(function (oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t\t}, this);\n\n\t\t\t\tthis._oModel.attachRequestFailed(function (oEvent) {\n\t\t\t\t\tvar oParams = oEvent.getParameters();\n\t\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\n\t\t\t\t\t// We already cover this case with a notFound target so we skip it here.\n\t\t\t\t\t// A request that cannot be sent to the server is a technical error that we have to handle though\n\t\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {\n\t\t\t\t\t\tthis._showServiceError(oParams.response);\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\n\t\t\t * Only the first error message will be display.\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showServiceError : function (sDetails) {\n\t\t\t\tif (this._bMessageOpen) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._bMessageOpen = true;\n\t\t\t\tMessageBox.error(\n\t\t\t\t\tthis._sErrorText,\n\t\t\t\t\t{\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\n\t\t\t\t\t\tdetails : sDetails,\n\t\t\t\t\t\tstyleClass : this._oComponent.getContentDensityClass(),\n\t\t\t\t\t\tactions : [MessageBox.Action.CLOSE],\n\t\t\t\t\t\tonClose : function () {\n\t\t\t\t\t\t\tthis._bMessageOpen = false;\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/controller/App.controller.js": "sap.ui.define([\n\t\t\"pizza/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\"\n\t], function (BaseController, JSONModel) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"pizza.controller.App\", {\n\n\t\t\tonInit : function () {\n\t\t\t\tvar oViewModel,\n\t\t\t\t\tfnSetAppNotBusy,\n\t\t\t\t\toListSelector = this.getOwnerComponent().oListSelector,\n\t\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\n\n\t\t\t\toViewModel = new JSONModel({\n\t\t\t\t\tbusy : true,\n\t\t\t\t\tdelay : 0\n\t\t\t\t});\n\t\t\t\tthis.setModel(oViewModel, \"appView\");\n\n\t\t\t\tfnSetAppNotBusy = function() {\n\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t};\n\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded()\n\t\t\t\t\t\t.then(fnSetAppNotBusy);\n\n\t\t\t\t// Makes sure that master view is hidden in split app\n\t\t\t\t// after a new list entry has been selected.\n\t\t\t\toListSelector.attachListSelectionChange(function () {\n\t\t\t\t\tthis.byId(\"idAppControl\").hideMaster();\n\t\t\t\t}, this);\n\n\t\t\t\t// apply content density mode to root view\n\t\t\t\tthis.getView().addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/controller/BaseController.js": "/*global history */\nsap.ui.define([\n\t\t\"sap/ui/core/mvc/Controller\",\n\t\t\"sap/ui/core/routing/History\"\n\t], function (Controller, History) {\n\t\t\"use strict\";\n\n\t\treturn Controller.extend(\"pizza.controller.BaseController\", {\n\t\t\t/**\n\t\t\t * Convenience method for accessing the router in every controller of the application.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.core.routing.Router} the router for this component\n\t\t\t */\n\t\t\tgetRouter : function () {\n\t\t\t\treturn this.getOwnerComponent().getRouter();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for getting the view model by name in every controller of the application.\n\t\t\t * @public\n\t\t\t * @param {string} sName the model name\n\t\t\t * @returns {sap.ui.model.Model} the model instance\n\t\t\t */\n\t\t\tgetModel : function (sName) {\n\t\t\t\treturn this.getView().getModel(sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for setting the view model in every controller of the application.\n\t\t\t * @public\n\t\t\t * @param {sap.ui.model.Model} oModel the model instance\n\t\t\t * @param {string} sName the model name\n\t\t\t * @returns {sap.ui.mvc.View} the view instance\n\t\t\t */\n\t\t\tsetModel : function (oModel, sName) {\n\t\t\t\treturn this.getView().setModel(oModel, sName);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Convenience method for getting the resource bundle.\n\t\t\t * @public\n\t\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\n\t\t\t */\n\t\t\tgetResourceBundle : function () {\n\t\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for navigating back.\n\t\t\t * It there is a history entry or an previous app-to-app navigation we go one step back in the browser history\n\t\t\t * If not, it will replace the current entry of the browser history with the master route.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonNavBack : function() {\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash(),\n\t\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\n\t\t\t\t\tif (sPreviousHash !== undefined || !oCrossAppNavigator.isInitialNavigation()) {\n\t\t\t\t\thistory.go(-1);\n\t\t\t\t} else {\n\t\t\t\t\tthis.getRouter().navTo(\"master\", {}, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/controller/ListSelector.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\"\n\t], function (BaseObject) {\n\t\t\"use strict\";\n\n\t\treturn BaseObject.extend(\"pizza.model.ListSelector\", {\n\n\t\t\t/**\n\t\t\t * Provides a convenience API for selecting list items. All the functions will wait until the initial load of the a List passed to the instance by the setBoundMasterList\n\t\t\t * function.\n\t\t\t * @class\n\t\t\t * @public\n\t\t\t * @alias pizza.model.ListSelector\n\t\t\t */\n\n\t\t\tconstructor : function () {\n\t\t\t\tthis._oWhenListHasBeenSet = new Promise(function (fnResolveListHasBeenSet) {\n\t\t\t\t\tthis._fnResolveListHasBeenSet = fnResolveListHasBeenSet;\n\t\t\t\t}.bind(this));\n\t\t\t\t// This promise needs to be created in the constructor, since it is allowed to\n\t\t\t\t// invoke selectItem functions before calling setBoundMasterList\n\t\t\t\tthis.oWhenListLoadingIsDone = new Promise(function (fnResolve, fnReject) {\n\t\t\t\t\t// Used to wait until the setBound masterList function is invoked\n\t\t\t\t\tthis._oWhenListHasBeenSet\n\t\t\t\t\t\t.then(function (oList) {\n\t\t\t\t\t\t\toList.getBinding(\"items\").attachEventOnce(\"dataReceived\",\n\t\t\t\t\t\t\t\tfunction (oData) {\n\t\t\t\t\t\t\t\t\tif (!oData.getParameter(\"data\")) {\n\t\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\terror : true\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar oFirstListItem = oList.getItems()[0];\n\t\t\t\t\t\t\t\t\tif (oFirstListItem) {\n\t\t\t\t\t\t\t\t\t\t// Have to make sure that first list Item is selected\n\t\t\t\t\t\t\t\t\t\t// and a select event is triggered. Like that, the corresponding\n\t\t\t\t\t\t\t\t\t\t// detail page is loaded automatically\n\t\t\t\t\t\t\t\t\t\tfnResolve({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\tfirstListitem : oFirstListItem\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// No items in the list\n\t\t\t\t\t\t\t\t\t\tfnReject({\n\t\t\t\t\t\t\t\t\t\t\tlist : oList,\n\t\t\t\t\t\t\t\t\t\t\terror : false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t}.bind(this));\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * A bound list should be passed in here. Should be done, before the list has received its initial data from the server.\n\t\t\t * May only be invoked once per ListSelector instance.\n\t\t\t * @param {sap.m.List} oList The list all the select functions will be invoked on.\n\t\t\t * @public\n\t\t\t */\n\t\t\tsetBoundMasterList : function (oList) {\n\t\t\t\tthis._oList = oList;\n\t\t\t\tthis._fnResolveListHasBeenSet(oList);\n\t\t\t},\n\n\n\t\t\t/**\n\t\t\t * Tries to select and scroll to a list item with a matching binding context. If there are no items matching the binding context or the ListMode is none,\n\t\t\t * no selection/scrolling will happen\n\t\t\t * @param {string} sBindingPath the binding path matching the binding path of a list item\n\t\t\t * @public\n\t\t\t */\n\t\t\tselectAListItem : function (sBindingPath) {\n\n\t\t\t\tthis.oWhenListLoadingIsDone.then(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tvar oList = this._oList,\n\t\t\t\t\t\t\toSelectedItem;\n\n\t\t\t\t\t\tif (oList.getMode() === \"None\") {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toSelectedItem = oList.getSelectedItem();\n\n\t\t\t\t\t\t// skip update if the current selection is already matching the object path\n\t\t\t\t\t\tif (oSelectedItem && oSelectedItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toList.getItems().some(function (oItem) {\n\t\t\t\t\t\t\tif (oItem.getBindingContext() && oItem.getBindingContext().getPath() === sBindingPath) {\n\t\t\t\t\t\t\t\toList.setSelectedItem(oItem);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\tjQuery.sap.log.warning(\"Could not select the list item with the path\" + sBindingPath + \" because the list encountered an error or had no items\");\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\n\n\t\t\t/* =========================================================== */\n\t\t\t/* Convenience Functions for List Selection Change Event       */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Attaches a listener and listener function to the ListSelector's bound master list. By using\n\t\t\t * a promise, the listener is added, even if the list is not available when 'attachListSelectionChange'\n\t\t\t * is called.\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t\t * @param {function} oListener the listener object\n\t\t\t * @return {pizza.model.ListSelector} the list selector object for method chaining\n\t\t\t * @public\n\t\t\t */\n\t\t\tattachListSelectionChange : function (fnFunction, oListener) {\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.attachSelectionChange(fnFunction, oListener);\n\t\t\t\t}.bind(this));\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Detaches a listener and listener function from the ListSelector's bound master list. By using\n\t\t\t * a promise, the listener is removed, even if the list is not available when 'detachListSelectionChange'\n\t\t\t * is called.\n\t\t\t * @param {function} fnFunction the function to be executed when the list fires a selection change event\n\t\t\t * @param {function} oListener the listener object\n\t\t\t * @return {pizza.model.ListSelector} the list selector object for method chaining\n\t\t\t * @public\n\t\t\t */\n\t\t\tdetachListSelectionChange : function (fnFunction, oListener) {\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.detachSelectionChange(fnFunction, oListener);\n\t\t\t\t}.bind(this));\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Removes all selections from master list.\n\t\t\t * Does not trigger 'selectionChange' event on master list, though.\n\t\t\t * @public\n\t\t\t */\n\t\t\tclearMasterListSelection : function () {\n\t\t\t\t//use promise to make sure that 'this._oList' is available\n\t\t\t\tthis._oWhenListHasBeenSet.then(function () {\n\t\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t\t}.bind(this));\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/test/unit/model/grouper.js": "sap.ui.define([\n\t\t\"pizza/model/grouper\",\n\t\t\"sap/ui/model/resource/ResourceModel\",\n\t\t\"jquery.sap.global\"\n\t], function (Grouper, ResourceModel, $) {\n\t\"use strict\";\n\n\tfunction createResourceModel () {\n\t\treturn new ResourceModel({\n\t\t\tbundleUrl : [$.sap.getModulePath(\"pizza\"), \"i18n/i18n.properties\"].join(\"/\")\n\t\t});\n\t}\n\n\tQUnit.module(\"Sorter - Grouping functions\", {\n\t\tbeforeEach : function () {\n\t\t\tthis._oResourceModel = createResourceModel();\n\t\t},\n\t\tafterEach : function () {\n\t\t\tthis._oResourceModel.destroy();\n\t\t}\n\t});\n\n\tfunction createContextObject(vValue) {\n\t\treturn {\n\t\t\tgetProperty : function () {\n\t\t\t\treturn vValue;\n\t\t\t}\n\t\t};\n\t}\n\n\tQUnit.test(\"Should group a price lesser equal 20\", function (assert) {\n\t\t// Arrange\n\t\tvar oContextObject = createContextObject(17.2),\n\t\t\toGrouperReturn;\n\n\t\t// System under test\n\t\tvar fnGroup = Grouper.groupUnitNumber(this._oResourceModel.getResourceBundle());\n\n\t\t// Assert\n\t\toGrouperReturn = fnGroup(oContextObject);\n\t\tassert.strictEqual(oGrouperReturn.key, \"LE20\", \"The key is as expected for a low value\");\n\t\tassert.strictEqual(oGrouperReturn.text, this._oResourceModel.getResourceBundle().getText(\"masterGroup1Header1\"), \"The group header is as expected for a low value\");\n\t});\n\n\tQUnit.test(\"Should group the price\", function (assert) {\n\t\t// Arrange\n\t\tvar oContextObject = createContextObject(55.5),\n\t\t\toGrouperReturn;\n\n\t\t// System under test\n\t\tvar fnGroup = Grouper.groupUnitNumber(this._oResourceModel.getResourceBundle());\n\n\t\t// Assert\n\t\toGrouperReturn = fnGroup(oContextObject);\n\t\tassert.strictEqual(oGrouperReturn.key, \"GT20\", \"The key is as expected for a high value\");\n\t\tassert.strictEqual(oGrouperReturn.text, this._oResourceModel.getResourceBundle().getText(\"masterGroup1Header2\"), \"The group header is as expected for a high value\");\n\t});\n\n});",
		"pizza/test/unit/model/formatter.js": "sap.ui.define([\n\t\t\"sap/m/Text\",\n\t\t\"pizza/model/formatter\"\n\t], function (Text, formatter) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"formatter - Currency value\");\n\n\t\tfunction currencyValueTestCase(assert, sValue, fExpectedNumber) {\n\t\t\t// Act\n\t\t\tvar fCurrency = formatter.currencyValue(sValue);\n\n\t\t\t// Assert\n\t\t\tassert.strictEqual(fCurrency, fExpectedNumber, \"The rounding was correct\");\n\t\t}\n\n\t\tQUnit.test(\"Should round down a 3 digit number\", function (assert) {\n\t\t\tcurrencyValueTestCase.call(this, assert, \"3.123\", \"3.12\");\n\t\t});\n\n\t\tQUnit.test(\"Should round up a 3 digit number\", function (assert) {\n\t\t\tcurrencyValueTestCase.call(this, assert, \"3.128\", \"3.13\");\n\t\t});\n\n\t\tQUnit.test(\"Should round a negative number\", function (assert) {\n\t\t\tcurrencyValueTestCase.call(this, assert, \"-3\", \"-3.00\");\n\t\t});\n\n\t\tQUnit.test(\"Should round an empty string\", function (assert) {\n\t\t\tcurrencyValueTestCase.call(this, assert, \"\", \"\");\n\t\t});\n\n\t\tQUnit.test(\"Should round a zero\", function (assert) {\n\t\t\tcurrencyValueTestCase.call(this, assert, \"0\", \"0.00\");\n\t\t});\n\n\t}\n);",
		"pizza/controller/Master.controller.js": "/*global history */\nsap.ui.define([\n\t\t\"pizza/controller/BaseController\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/core/routing/History\",\n\t\t\"sap/ui/model/Filter\",\n\t\t\"sap/ui/model/FilterOperator\",\n\t\t\"sap/m/GroupHeaderListItem\",\n\t\t\"sap/ui/Device\",\n\t\t\"pizza/model/formatter\",\n\t\t\"pizza/model/grouper\",\n\t\t\"pizza/model/GroupSortState\"\n\t], function (BaseController, JSONModel, History, Filter, FilterOperator, GroupHeaderListItem, Device, formatter, grouper, GroupSortState) {\n\t\t\"use strict\";\n\n\t\treturn BaseController.extend(\"pizza.controller.Master\", {\n\n\t\t\tformatter: formatter,\n\n\t\t\t/* =========================================================== */\n\t\t\t/* lifecycle methods                                           */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * Called when the master list controller is instantiated. It sets up the event handling for the master/detail communication and other lifecycle tasks.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonInit : function () {\n\t\t\t\t// Control state model\n\t\t\t\tvar oList = this.byId(\"list\"),\n\t\t\t\t\toViewModel = this._createViewModel(),\n\t\t\t\t\t// Put down master list's original value for busy indicator delay,\n\t\t\t\t\t// so it can be restored later on. Busy handling on the master list is\n\t\t\t\t\t// taken care of by the master list itself.\n\t\t\t\t\tiOriginalBusyDelay = oList.getBusyIndicatorDelay();\n\n\t\t\t\tthis._oGroupSortState = new GroupSortState(oViewModel, grouper.groupUnitNumber(this.getResourceBundle()));\n\n\t\t\t\tthis._oList = oList;\n\t\t\t\t// keeps the filter and search state\n\t\t\t\tthis._oListFilterState = {\n\t\t\t\t\taFilter : [],\n\t\t\t\t\taSearch : []\n\t\t\t\t};\n\n\t\t\t\tthis.setModel(oViewModel, \"masterView\");\n\t\t\t\t// Make sure, busy indication is showing immediately so there is no\n\t\t\t\t// break after the busy indication for loading the view's meta data is\n\t\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\n\t\t\t\toList.attachEventOnce(\"updateFinished\", function(){\n\t\t\t\t\t// Restore original busy indicator delay for the list\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\n\t\t\t\t});\n\n\t\t\t\tthis.getView().addEventDelegate({\n\t\t\t\t\tonBeforeFirstShow: function () {\n\t\t\t\t\t\tthis.getOwnerComponent().oListSelector.setBoundMasterList(oList);\n\t\t\t\t\t}.bind(this)\n\t\t\t\t});\n\n\t\t\t\tthis.getRouter().getRoute(\"master\").attachPatternMatched(this._onMasterMatched, this);\n\t\t\t\tthis.getRouter().attachBypassed(this.onBypassed, this);\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* event handlers                                              */\n\t\t\t/* =========================================================== */\n\n\t\t\t/**\n\t\t\t * After list data is available, this handler method updates the\n\t\t\t * master list counter and hides the pull to refresh control, if\n\t\t\t * necessary.\n\t\t\t * @param {sap.ui.base.Event} oEvent the update finished event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonUpdateFinished : function (oEvent) {\n\t\t\t\t// update the master list object counter after new data is loaded\n\t\t\t\tthis._updateListItemCount(oEvent.getParameter(\"total\"));\n\t\t\t\t// hide pull to refresh if necessary\n\t\t\t\tthis.byId(\"pullToRefresh\").hide();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for the master search field. Applies current\n\t\t\t * filter value and triggers a new search. If the search field's\n\t\t\t * 'refresh' button has been pressed, no new search is triggered\n\t\t\t * and the list binding is refresh instead.\n\t\t\t * @param {sap.ui.base.Event} oEvent the search event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonSearch : function (oEvent) {\n\t\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\n\t\t\t\t\t// Search field's 'refresh' button has been pressed.\n\t\t\t\t\t// This is visible if you select any master list item.\n\t\t\t\t\t// In this case no new search is triggered, we only\n\t\t\t\t\t// refresh the list binding.\n\t\t\t\t\tthis.onRefresh();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar sQuery = oEvent.getParameter(\"query\");\n\n\t\t\t\tif (sQuery) {\n\t\t\t\t\tthis._oListFilterState.aSearch = [new Filter(\"CustomerName\", FilterOperator.Contains, sQuery)];\n\t\t\t\t} else {\n\t\t\t\t\tthis._oListFilterState.aSearch = [];\n\t\t\t\t}\n\t\t\t\tthis._applyFilterSearch();\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for refresh event. Keeps filter, sort\n\t\t\t * and group settings and refreshes the list binding.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonRefresh : function () {\n\t\t\t\tthis._oList.getBinding(\"items\").refresh();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for the sorter selection.\n\t\t\t * @param {sap.ui.base.Event} oEvent the select event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonSort : function (oEvent) {\n\t\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\n\t\t\t\t\taSorters = this._oGroupSortState.sort(sKey);\n\n\t\t\t\tthis._applyGroupSort(aSorters);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for the grouper selection.\n\t\t\t * @param {sap.ui.base.Event} oEvent the search field event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonGroup : function (oEvent) {\n\t\t\t\tvar sKey = oEvent.getSource().getSelectedItem().getKey(),\n\t\t\t\t\taSorters = this._oGroupSortState.group(sKey);\n\n\t\t\t\tthis._applyGroupSort(aSorters);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for the filter button to open the ViewSettingsDialog.\n\t\t\t * which is used to add or remove filters to the master list. This\n\t\t\t * handler method is also called when the filter bar is pressed,\n\t\t\t * which is added to the beginning of the master list when a filter is applied.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonOpenViewSettings : function () {\n\t\t\t\tif (!this._oViewSettingsDialog) {\n\t\t\t\t\tthis._oViewSettingsDialog = sap.ui.xmlfragment(\"pizza.view.ViewSettingsDialog\", this);\n\t\t\t\t\tthis.getView().addDependent(this._oViewSettingsDialog);\n\t\t\t\t\t// forward compact/cozy style into Dialog\n\t\t\t\t\tthis._oViewSettingsDialog.addStyleClass(this.getOwnerComponent().getContentDensityClass());\n\t\t\t\t}\n\t\t\t\tthis._oViewSettingsDialog.open();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler called when ViewSettingsDialog has been confirmed, i.e.\n\t\t\t * has been closed with 'OK'. In the case, the currently chosen filters\n\t\t\t * are applied to the master list, which can also mean that the currently\n\t\t\t * applied filters are removed from the master list, in case the filter\n\t\t\t * settings are removed in the ViewSettingsDialog.\n\t\t\t * @param {sap.ui.base.Event} oEvent the confirm event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonConfirmViewSettingsDialog : function (oEvent) {\n\t\t\t\tvar aFilterItems = oEvent.getParameters().filterItems,\n\t\t\t\t\taFilters = [],\n\t\t\t\t\taCaptions = [];\n\n\t\t\t\t// update filter state:\n\t\t\t\t// combine the filter array and the filter string\n\t\t\t\taFilterItems.forEach(function (oItem) {\n\t\t\t\t\tswitch (oItem.getKey()) {\n\t\t\t\t\t\tcase \"Filter1\" :\n\t\t\t\t\t\t\taFilters.push(new Filter(\"TotalAmount\", FilterOperator.LE, 100));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"Filter2\" :\n\t\t\t\t\t\t\taFilters.push(new Filter(\"TotalAmount\", FilterOperator.GT, 100));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault :\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\taCaptions.push(oItem.getText());\n\t\t\t\t});\n\n\t\t\t\tthis._oListFilterState.aFilter = aFilters;\n\t\t\t\tthis._updateFilterBar(aCaptions.join(\", \"));\n\t\t\t\tthis._applyFilterSearch();\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for the list selection event\n\t\t\t * @param {sap.ui.base.Event} oEvent the list selectionChange event\n\t\t\t * @public\n\t\t\t */\n\t\t\tonSelectionChange : function (oEvent) {\n\t\t\t\t// get the list item, either from the listItem parameter or from the event's source itself (will depend on the device-dependent mode).\n\t\t\t\tthis._showDetail(oEvent.getParameter(\"listItem\") || oEvent.getSource());\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for the bypassed event, which is fired when no routing pattern matched.\n\t\t\t * If there was an object selected in the master list, that selection is removed.\n\t\t\t * @public\n\t\t\t */\n\t\t\tonBypassed : function () {\n\t\t\t\tthis._oList.removeSelections(true);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Used to create GroupHeaders with non-capitalized caption.\n\t\t\t * These headers are inserted into the master list to\n\t\t\t * group the master list's items.\n\t\t\t * @param {Object} oGroup group whose text is to be displayed\n\t\t\t * @public\n\t\t\t * @returns {sap.m.GroupHeaderListItem} group header with non-capitalized caption.\n\t\t\t */\n\t\t\tcreateGroupHeader : function (oGroup) {\n\t\t\t\treturn new GroupHeaderListItem({\n\t\t\t\t\ttitle : oGroup.text,\n\t\t\t\t\tupperCase : false\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Event handler for navigating back.\n\t\t\t * It there is a history entry or an previous app-to-app navigation we go one step back in the browser history\n\t\t\t * If not, it will navigate to the shell home\n\t\t\t * @public\n\t\t\t */\n\t\t\tonNavBack : function() {\n\t\t\t\tvar sPreviousHash = History.getInstance().getPreviousHash(),\n\t\t\t\t\toCrossAppNavigator = sap.ushell.Container.getService(\"CrossApplicationNavigation\");\n\n\t\t\t\tif (sPreviousHash !== undefined || !oCrossAppNavigator.isInitialNavigation()) {\n\t\t\t\t\thistory.go(-1);\n\t\t\t\t} else {\n\t\t\t\t\toCrossAppNavigator.toExternal({\n\t\t\t\t\t\ttarget: {shellHash: \"#Shell-home\"}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/* =========================================================== */\n\t\t\t/* begin: internal methods                                     */\n\t\t\t/* =========================================================== */\n\n\n\t\t\t_createViewModel : function() {\n\t\t\t\treturn new JSONModel({\n\t\t\t\t\tisFilterBarVisible: false,\n\t\t\t\t\tfilterBarLabel: \"\",\n\t\t\t\t\tdelay: 0,\n\t\t\t\t\ttitle: this.getResourceBundle().getText(\"masterTitleCount\", [0]),\n\t\t\t\t\tnoDataText: this.getResourceBundle().getText(\"masterListNoDataText\"),\n\t\t\t\t\tsortBy: \"CustomerName\",\n\t\t\t\t\tgroupBy: \"None\"\n\t\t\t\t});\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * If the master route was hit (empty hash) we have to set\n\t\t\t * the hash to to the first item in the list as soon as the\n\t\t\t * listLoading is done and the first item in the list is known\n\t\t\t * @private\n\t\t\t */\n\t\t\t_onMasterMatched :  function() {\n\t\t\t\tthis.getOwnerComponent().oListSelector.oWhenListLoadingIsDone.then(\n\t\t\t\t\tfunction (mParams) {\n\t\t\t\t\t\tif (mParams.list.getMode() === \"None\") {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar sObjectId = mParams.firstListitem.getBindingContext().getProperty(\"OrderId\");\n\t\t\t\t\t\tthis.getRouter().navTo(\"object\", {objectId : sObjectId}, true);\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tfunction (mParams) {\n\t\t\t\t\t\tif (mParams.error) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.getRouter().getTargets().display(\"detailNoObjectsAvailable\");\n\t\t\t\t\t}.bind(this)\n\t\t\t\t);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Shows the selected item on the detail page\n\t\t\t * On phones a additional history entry is created\n\t\t\t * @param {sap.m.ObjectListItem} oItem selected Item\n\t\t\t * @private\n\t\t\t */\n\t\t\t_showDetail : function (oItem) {\n\t\t\t\tvar bReplace = !Device.system.phone;\n\t\t\t\tthis.getRouter().navTo(\"object\", {\n\t\t\t\t\tobjectId : oItem.getBindingContext().getProperty(\"OrderId\")\n\t\t\t\t}, bReplace);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the item count on the master list header\n\t\t\t * @param {integer} iTotalItems the total number of items in the list\n\t\t\t * @private\n\t\t\t */\n\t\t\t_updateListItemCount : function (iTotalItems) {\n\t\t\t\tvar sTitle;\n\t\t\t\t// only update the counter if the length is final\n\t\t\t\tif (this._oList.getBinding(\"items\").isLengthFinal()) {\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"masterTitleCount\", [iTotalItems]);\n\t\t\t\t\tthis.getModel(\"masterView\").setProperty(\"/title\", sTitle);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Internal helper method to apply both filter and search state together on the list binding\n\t\t\t * @private\n\t\t\t */\n\t\t\t_applyFilterSearch : function () {\n\t\t\t\tvar aFilters = this._oListFilterState.aSearch.concat(this._oListFilterState.aFilter),\n\t\t\t\t\toViewModel = this.getModel(\"masterView\");\n\t\t\t\tthis._oList.getBinding(\"items\").filter(aFilters, \"Application\");\n\t\t\t\t// changes the noDataText of the list in case there are no filter results\n\t\t\t\tif (aFilters.length !== 0) {\n\t\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataWithFilterOrSearchText\"));\n\t\t\t\t} else if (this._oListFilterState.aSearch.length > 0) {\n\t\t\t\t\t// only reset the no data text to default when no new search was triggered\n\t\t\t\t\toViewModel.setProperty(\"/noDataText\", this.getResourceBundle().getText(\"masterListNoDataText\"));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Internal helper method to apply both group and sort state together on the list binding\n\t\t\t * @param {sap.ui.model.Sorter[]} aSorters an array of sorters\n\t\t\t * @private\n\t\t\t */\n\t\t\t_applyGroupSort : function (aSorters) {\n\t\t\t\tthis._oList.getBinding(\"items\").sort(aSorters);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Internal helper method that sets the filter bar visibility property and the label's caption to be shown\n\t\t\t * @param {string} sFilterBarText the selected filter value\n\t\t\t * @private\n\t\t\t */\n\t\t\t_updateFilterBar : function (sFilterBarText) {\n\t\t\t\tvar oViewModel = this.getModel(\"masterView\");\n\t\t\t\toViewModel.setProperty(\"/isFilterBarVisible\", (this._oListFilterState.aFilter.length > 0));\n\t\t\t\toViewModel.setProperty(\"/filterBarLabel\", this.getResourceBundle().getText(\"masterFilterBarText\", [sFilterBarText]));\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/test/unit/model/models.js": "sap.ui.define([\n\t\t\"pizza/model/models\",\n\t\t\"sap/ui/thirdparty/sinon\",\n\t\t\"sap/ui/thirdparty/sinon-qunit\"\n\t], function (models) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"createDeviceModel\", {\n\t\t\tafterEach : function () {\n\t\t\t\tthis.oDeviceModel.destroy();\n\t\t\t}\n\t\t});\n\n\t\tfunction isPhoneTestCase(assert, bIsPhone) {\n\t\t\t// Arrange\n\t\t\tthis.stub(sap.ui.Device, \"system\", { phone : bIsPhone });\n\n\t\t\t// System under test\n\t\t\tthis.oDeviceModel = models.createDeviceModel();\n\n\t\t\t// Assert\n\t\t\tassert.strictEqual(this.oDeviceModel.getData().system.phone, bIsPhone, \"IsPhone property is correct\");\n\t\t}\n\n\t\tQUnit.test(\"Should initialize a device model for desktop\", function (assert) {\n\t\t\tisPhoneTestCase.call(this, assert, false);\n\t\t});\n\n\t\tQUnit.test(\"Should initialize a device model for phone\", function (assert) {\n\t\t\tisPhoneTestCase.call(this, assert, true);\n\t\t});\n\n\t\tfunction isTouchTestCase(assert, bIsTouch) {\n\t\t\t// Arrange\n\t\t\tthis.stub(sap.ui.Device, \"support\", { touch : bIsTouch });\n\n\t\t\t// System under test\n\t\t\tthis.oDeviceModel = models.createDeviceModel();\n\n\t\t\t// Assert\n\t\t\tassert.strictEqual(this.oDeviceModel.getData().support.touch, bIsTouch, \"IsTouch property is correct\");\n\t\t}\n\n\t\tQUnit.test(\"Should initialize a device model for non touch devices\", function (assert) {\n\t\t\tisTouchTestCase.call(this, assert, false);\n\t\t});\n\n\t\tQUnit.test(\"Should initialize a device model for touch devices\", function (assert) {\n\t\t\tisTouchTestCase.call(this, assert, true);\n\t\t});\n\n\t\tQUnit.test(\"The binding mode of the device model should be one way\", function (assert) {\n\n\t\t\t// System under test\n\t\t\tthis.oDeviceModel = models.createDeviceModel();\n\n\t\t\t// Assert\n\t\t\tassert.strictEqual(this.oDeviceModel.getDefaultBindingMode(), \"OneWay\", \"Binding mode is correct\");\n\t\t});\n\n\t}\n);",
		"pizza/test/unit/controller/ListSelector.js": "sap.ui.define([\n\t\t\"pizza/controller/ListSelector\",\n\t\t\"sap/ui/thirdparty/sinon\",\n\t\t\"sap/ui/thirdparty/sinon-qunit\"\n\t], function(ListSelector) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"Initialization\", {\n\t\t\tbeforeEach : function () {\n\t\t\t\tsinon.config.useFakeTimers = false;\n\t\t\t\tthis.oListSelector = new ListSelector();\n\t\t\t},\n\t\t\tafterEach : function () {\n\t\t\t\tthis.oListSelector.destroy();\n\t\t\t}\n\t\t});\n\n\t\tQUnit.test(\"Should initialize the List loading promise\", function (assert) {\n\t\t\t// Arrange\n\t\t\tvar done = assert.async(),\n\t\t\t\tfnRejectSpy = this.spy(),\n\t\t\t\tfnResolveSpy = this.spy();\n\n\t\t\t// Act\n\t\t\tthis.oListSelector.oWhenListLoadingIsDone.then(fnResolveSpy, fnRejectSpy);\n\n\t\t\t// Assert\n\t\t\tsetTimeout(function () {\n\t\t\t\tassert.strictEqual(fnResolveSpy.callCount, 0, \"Did not resolve the promise\");\n\t\t\t\tassert.strictEqual(fnRejectSpy.callCount, 0, \"Did not reject the promise\");\n\t\t\t\tdone();\n\t\t\t}, 0);\n\t\t});\n\n\t\tQUnit.module(\"List loading\", {\n\t\t\tbeforeEach : function () {\n\t\t\t\tsinon.config.useFakeTimers = false;\n\t\t\t\tthis.oListSelector = new ListSelector();\n\t\t\t},\n\t\t\tafterEach : function () {\n\t\t\t\tthis.oListSelector.destroy();\n\t\t\t}\n\t\t});\n\n\t\tfunction createListStub (bCreateListItem, sBindingPath) {\n\t\t\tvar fnGetParameter = function () {\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\toDataStub = {\n\t\t\t\t\tgetParameter : fnGetParameter\n\t\t\t\t},\n\t\t\t\tfnAttachEventOnce = function (sEventName, fnCallback) {\n\t\t\t\t\tfnCallback(oDataStub);\n\t\t\t\t},\n\t\t\t\tfnGetBinding = this.stub().returns({\n\t\t\t\t\tattachEventOnce : fnAttachEventOnce\n\t\t\t\t}),\n\t\t\t\tfnAttachEvent = function (sEventName, fnCallback, oContext) {\n\t\t\t\t\tfnCallback.apply(oContext);\n\t\t\t\t},\n\t\t\t\toListItemStub = {\n\t\t\t\t\tgetBindingContext : this.stub().returns({\n\t\t\t\t\t\tgetPath : this.stub().returns(sBindingPath)\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t\taListItems = [];\n\n\t\t\tif (bCreateListItem) {\n\t\t\t\taListItems.push(oListItemStub);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tattachEvent : fnAttachEvent,\n\t\t\t\tattachEventOnce : fnAttachEventOnce,\n\t\t\t\tgetBinding : fnGetBinding,\n\t\t\t\tgetItems : this.stub().returns(aListItems)\n\t\t\t};\n\t\t}\n\n\t\tQUnit.test(\"Should resolve the list loading promise, if the list has items\", function (assert) {\n\t\t\t// Arrange\n\t\t\tvar done = assert.async(),\n\t\t\t\tfnRejectSpy = this.spy(),\n\t\t\t\tfnResolveSpy = function (sBindingPath) {\n\t\t\t\t\t// Assert\n\t\t\t\t\tassert.strictEqual(sBindingPath, sBindingPath, \"Did pass the binding path\");\n\t\t\t\t\tassert.strictEqual(fnRejectSpy.callCount, 0, \"Did not reject the promise\");\n\t\t\t\t\tdone();\n\t\t\t\t};\n\n\t\t\t// Act\n\t\t\tthis.oListSelector.oWhenListLoadingIsDone.then(fnResolveSpy, fnRejectSpy);\n\t\t\tthis.oListSelector.setBoundMasterList(createListStub.call(this, true, \"anything\"));\n\t\t});\n\n\t\tQUnit.test(\"Should reject the list loading promise, if the list has no items\", function (assert) {\n\t\t\t// Arrange\n\t\t\tvar done = assert.async(),\n\t\t\t\tfnResolveSpy = this.spy(),\n\t\t\t\tfnRejectSpy = function () {\n\t\t\t\t\t// Assert\n\t\t\t\t\tassert.strictEqual(fnResolveSpy.callCount, 0, \"Did not resolve the promise\");\n\t\t\t\t\tdone();\n\t\t\t\t};\n\n\t\t\t// Act\n\t\t\tthis.oListSelector.oWhenListLoadingIsDone.then(fnResolveSpy, fnRejectSpy);\n\t\t\tthis.oListSelector.setBoundMasterList(createListStub.call(this, false));\n\t\t});\n\n\t\tQUnit.module(\"Selecting item in the list\", {\n\t\t\tbeforeEach : function () {\n\t\t\t\tsinon.config.useFakeTimers = false;\n\t\t\t\tthis.oListSelector = new ListSelector();\n\t\t\t\tthis.oListSelector.oWhenListLoadingIsDone = {\n\t\t\t\t\tthen : function (fnAct) {\n\t\t\t\t\t\tthis.fnAct = fnAct;\n\t\t\t\t\t}.bind(this)\n\t\t\t\t};\n\t\t\t},\n\t\t\tafterEach : function () {\n\t\t\t\tthis.oListSelector.destroy();\n\t\t\t}\n\t\t});\n\n\t\tfunction createStubbedListItem (sBindingPath) {\n\t\t\treturn {\n\t\t\t\tgetBindingContext : this.stub().returns({\n\t\t\t\t\tgetPath : this.stub().returns(sBindingPath)\n\t\t\t\t})\n\t\t\t};\n\t\t}\n\n\t\tQUnit.test(\"Should select an Item of the list when it is loaded and the binding contexts match\", function (assert) {\n\t\t\t// Arrange\n\t\t\tvar sBindingPath = \"anything\",\n\t\t\t\toListItemToSelect = createStubbedListItem.call(this, sBindingPath),\n\t\t\t\toSelectedListItemStub = createStubbedListItem.call(this, \"a different binding path\");\n\n\t\t\tthis.oListSelector._oList = {\n\t\t\t\tgetMode : this.stub().returns(\"SingleSelectMaster\"),\n\t\t\t\tgetSelectedItem : this.stub().returns(oSelectedListItemStub),\n\t\t\t\tgetItems : this.stub().returns([ oSelectedListItemStub, oListItemToSelect, createListStub.call(this, \"yet another list binding\") ]),\n\t\t\t\tsetSelectedItem : function (oItem) {\n\t\t\t\t\t//Assert\n\t\t\t\t\tassert.strictEqual(oItem, oListItemToSelect, \"Did select the list item with a matching binding context\");\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Act\n\t\t\tthis.oListSelector.selectAListItem(sBindingPath);\n\t\t\t// Resolve list loading\n\t\t\tthis.fnAct();\n\t\t});\n\n\t\tQUnit.test(\"Should not select an Item of the list when it is already selected\", function (assert) {\n\t\t\t// Arrange\n\t\t\tvar sBindingPath = \"anything\",\n\t\t\t\toSelectedListItemStub = createStubbedListItem.call(this, sBindingPath);\n\n\t\t\tthis.oListSelector._oList = {\n\t\t\t\tgetMode:  this.stub().returns(\"SingleSelectMaster\"),\n\t\t\t\tgetSelectedItem : this.stub().returns(oSelectedListItemStub)\n\t\t\t};\n\n\t\t\t// Act\n\t\t\tthis.oListSelector.selectAListItem(sBindingPath);\n\t\t\t// Resolve list loading\n\t\t\tthis.fnAct();\n\n\t\t\t// Assert\n\t\t\tassert.ok(true, \"did not fail\");\n\t\t});\n\n\t\tQUnit.test(\"Should not select an item of the list when the list has the selection mode none\", function (assert) {\n\t\t\t// Arrange\n\t\t\tvar sBindingPath = \"anything\";\n\n\t\t\tthis.oListSelector._oList = {\n\t\t\t\tgetMode : this.stub().returns(\"None\")\n\t\t\t};\n\n\t\t\t// Act\n\t\t\tthis.oListSelector.selectAListItem(sBindingPath);\n\t\t\t// Resolve list loading\n\t\t\tthis.fnAct();\n\n\t\t\t// Assert\n\t\t\tassert.ok(true, \"did not fail\");\n\t\t});\n\n\t}\n);",
		"pizza/test/unit/controller/App.controller.js": "sap.ui.define([\n\t\t\"pizza/controller/App.controller\",\n\t\t\"sap/m/SplitApp\",\n\t\t\"sap/ui/core/Control\",\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/thirdparty/sinon\",\n\t\t\"sap/ui/thirdparty/sinon-qunit\"\n\t], function(AppController, SplitApp, Control, JSONModel) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"AppController - Hide master\");\n\n\t\tQUnit.test(\"Should hide the master of a SplitApp when selection in the list changes\", function (assert) {\n\t\t\t// Arrange\n\t\t\tvar fnOnSelectionChange,\n\t\t\t\toViewStub = new Control(),\n\t\t\t\toODataModelStub = new JSONModel(),\n\t\t\t\toComponentStub = new Control(),\n\t\t\t\toSplitApp = new SplitApp(),\n\t\t\t\tfnHideMasterSpy = sinon.spy(oSplitApp,\"hideMaster\");\n\n\t\t\toComponentStub.oListSelector = {\n\t\t\t\tattachListSelectionChange : function (fnFunctionToCall, oListener) {\n\t\t\t\t\tfnOnSelectionChange = fnFunctionToCall.bind(oListener);\n\t\t\t\t}\n\t\t\t};\n\t\t\toComponentStub.getContentDensityClass = jQuery.noop;\n\n\t\t\toODataModelStub.metadataLoaded = function () {\n\t\t\t\treturn {\n\t\t\t\t\tthen : jQuery.noop\n\t\t\t\t};\n\t\t\t};\n\t\t\toComponentStub.setModel(oODataModelStub);\n\n\t\t\t// System under Test\n\t\t\tvar oAppController = new AppController();\n\n\t\t\tthis.stub(oAppController, \"byId\").withArgs(\"idAppControl\").returns(oSplitApp);\n\t\t\tthis.stub(oAppController, \"getView\").returns(oViewStub);\n\t\t\tthis.stub(oAppController, \"getOwnerComponent\").returns(oComponentStub);\n\n\t\t\t// Act\n\t\t\toAppController.onInit();\n\t\t\tassert.ok(fnOnSelectionChange, \"Did register to the change event of the ListSelector\");\n\t\t\t// Simulate the event of the list\n\t\t\tfnOnSelectionChange();\n\n\t\t\t// Assert\n\t\t\tassert.strictEqual(fnHideMasterSpy.callCount, 1, \"Did hide the master\");\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/NotFoundJourney.js": "sap.ui.define([\n\t\t\"sap/ui/test/opaQunit\"\n\t], function (opaTest) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"Desktop not found\");\n\n\t\topaTest(\"Should see the resource not found page and no selection in the master list when navigating to an invalid hash\", function (Given, When, Then) {\n\t\t\t//Arrangement\n\t\t\tGiven.iStartTheApp();\n\n\t\t\t//Actions\n\t\t\tWhen.onTheMasterPage.iWaitUntilTheListIsLoaded()\n\t\t\t\t.and.iWaitUntilTheFirstItemIsSelected();\n\t\t\tWhen.onTheBrowserPage.iChangeTheHashToSomethingInvalid();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheNotFoundPage.iShouldSeeTheNotFoundPage().\n\t\t\t\tand.theNotFoundPageShouldSayResourceNotFound();\n\t\t\tThen.onTheMasterPage.theListShouldHaveNoSelection().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t\topaTest(\"Should see the not found page if the hash is something that matches no route\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheApp({ hash : \"somethingThatDoesNotExist\" });\n\n\t\t\t// Actions\n\t\t\tWhen.onTheNotFoundPage.iLookAtTheScreen();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheNotFoundPage.iShouldSeeTheNotFoundPage().\n\t\t\t\tand.theNotFoundPageShouldSayResourceNotFound().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t\topaTest(\"Should see the not found master and detail page if an invalid object id has been called\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheApp({ hash : \"/OrdersSet/SomeInvalidObjectId\" });\n\n\t\t\t//Actions\n\t\t\tWhen.onTheNotFoundPage.iLookAtTheScreen();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheNotFoundPage.iShouldSeeTheObjectNotFoundPage().\n\t\t\t\tand.theNotFoundPageShouldSayObjectNotFound().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t\topaTest(\"Should see the not found text for no search results\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheApp();\n\n\t\t\t//Actions\n\t\t\tWhen.onTheMasterPage.iSearchForSomethingWithNoResults();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.iShouldSeeTheNoDataTextForNoSearchResults().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t}\n);",
		"pizza/test/unit/model/GroupSortState.js": "sap.ui.define([\n\t\t\"pizza/model/GroupSortState\",\n\t\t\"sap/ui/model/json/JSONModel\"\n\t], function (GroupSortState, JSONModel) {\n\t\"use strict\";\n\n\tQUnit.module(\"GroupSortState - grouping and sorting\", {\n\t\tbeforeEach: function () {\n\t\t\tthis.oModel = new JSONModel({});\n\t\t\t// System under test\n\t\t\tthis.oGroupSortState = new GroupSortState(this.oModel, function() {});\n\t\t}\n\t});\n\n\tQUnit.test(\"Should always return a sorter when sorting\", function (assert) {\n\t\t// Act + Assert\n\t\tassert.strictEqual(this.oGroupSortState.sort(\"TotalAmount\").length, 1, \"The sorting by TotalAmount returned a sorter\");\n\t\tassert.strictEqual(this.oGroupSortState.sort(\"CustomerName\").length, 1, \"The sorting by CustomerName returned a sorter\");\n\t});\n\n\tQUnit.test(\"Should return a grouper when grouping\", function (assert) {\n\t\t// Act + Assert\n\t\tassert.strictEqual(this.oGroupSortState.group(\"TotalAmount\").length, 1, \"The group by TotalAmount returned a sorter\");\n\t\tassert.strictEqual(this.oGroupSortState.group(\"None\").length, 0, \"The sorting by None returned no sorter\");\n\t});\n\n\n\tQUnit.test(\"Should set the sorting to TotalAmount if the user groupes by TotalAmount\", function (assert) {\n\t\t// Act + Assert\n\t\tthis.oGroupSortState.group(\"TotalAmount\");\n\t\tassert.strictEqual(this.oModel.getProperty(\"/sortBy\"), \"TotalAmount\", \"The sorting is the same as the grouping\");\n\t});\n\n\tQUnit.test(\"Should set the grouping to None if the user sorts by CustomerName and there was a grouping before\", function (assert) {\n\t\t// Arrange\n\t\tthis.oModel.setProperty(\"/groupBy\", \"TotalAmount\");\n\n\t\tthis.oGroupSortState.sort(\"CustomerName\");\n\n\t\t// Assert\n\t\tassert.strictEqual(this.oModel.getProperty(\"/groupBy\"), \"None\", \"The grouping got reset\");\n\t});\n});",
		"pizza/test/integration/NavigationJourney.js": "sap.ui.define([\n\t\t\"sap/ui/test/opaQunit\"\n\t], function (opaTest) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"Desktop navigation\");\n\n\t\topaTest(\"Should start the app with empty hash: the hash should reflect the selection of the first item in the list\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheApp();\n\n\t\t\t//Actions\n\t\t\tWhen.onTheMasterPage.iRememberTheSelectedItem();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.theFirstItemShouldBeSelected();\n\t\t\tThen.onTheDetailPage.iShouldSeeTheRememberedObject().and.iShouldSeeNoBusyIndicator();\n\t\t\tThen.onTheBrowserPage.iShouldSeeTheHashForTheRememberedObject();\n\t\t});\n\n\t\topaTest(\"Should react on hashchange\", function (Given, When, Then) {\n\t\t\t// Actions\n\t\t\tWhen.onTheMasterPage.iRememberTheIdOfListItemAtPosition(2);\n\t\t\tWhen.onTheBrowserPage.iChangeTheHashToTheRememberedItem();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheDetailPage.iShouldSeeTheRememberedObject().and.iShouldSeeNoBusyIndicator();\n\t\t\tThen.onTheMasterPage.theRememberedListItemShouldBeSelected();\n\t\t});\n\n\n\t\topaTest(\"Should navigate on press\", function (Given, When, Then) {\n\t\t\t// Actions\n\t\t\tWhen.onTheMasterPage.iRememberTheIdOfListItemAtPosition(1).\n\t\t\t\tand.iPressOnTheObjectAtPosition(1);\n\n\t\t\t// Assertions\n\t\t\tThen.onTheDetailPage.iShouldSeeTheRememberedObject();\n\t\t});\n\n\t\topaTest(\"Detail Page Shows Object Details\", function (Given, When, Then) {\n\t\t\t// Actions\n\t\t\tWhen.onTheDetailPage.iLookAtTheScreen();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheDetailPage.iShouldSeeTheObjectLineItemsList().\n\t\t\t\tand.theDetailViewShouldContainOnlyFormattedUnitNumbers().\n\t\t\t\tand.theLineItemsListShouldHaveTheCorrectNumberOfItems().\n\t\t\t\tand.theLineItemsHeaderShouldDisplayTheAmountOfEntries().\n\t\t\t\tand.theLineItemsTableShouldContainOnlyFormattedUnitNumbers();\n\n\t\t});\n\n\t\topaTest(\"Navigate to an object not on the client: no item should be selected and the object page should be displayed\", function (Given, When, Then) {\n\t\t\t//Actions\n\t\t\tWhen.onTheMasterPage.iRememberAnIdOfAnObjectThatsNotInTheList();\n\t\t\tWhen.onTheBrowserPage.iChangeTheHashToTheRememberedItem();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheDetailPage.iShouldSeeTheRememberedObject().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t\topaTest(\"Start the App and simulate metadata error: MessageBox should be shown\", function (Given, When, Then) {\n\t\t\t//Arrangement\n\t\t\tGiven.iStartMyAppOnADesktopToTestErrorHandler(\"metadataError=true\");\n\n\t\t\t// Assertions\n\t\t\tThen.onTheAppPage.iShouldSeeTheMessageBox().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t\topaTest(\"Start the App and simulate bad request error: MessageBox should be shown\", function (Given, When, Then) {\n\t\t\t//Arrangement\n\t\t\tGiven.iStartMyAppOnADesktopToTestErrorHandler(\"errorType=serverError\");\n\n\t\t\t// Assertions\n\t\t\tThen.onTheAppPage.iShouldSeeTheMessageBox().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/AllJourneys.js": "jQuery.sap.require(\"sap.ui.qunit.qunit-css\");\njQuery.sap.require(\"sap.ui.thirdparty.qunit\");\njQuery.sap.require(\"sap.ui.qunit.qunit-junit\");\nQUnit.config.autostart = false;\n\n// We cannot provide stable mock data out of the template.\n// If you introduce mock data, by adding .json files in your webapp/localService/mockdata folder you have to provide the following minimum data:\n// * At least 3 OrdersSet in the list\n// * All 3 OrdersSet have at least one NavOrderItems\n\nsap.ui.require([\n\t\"sap/ui/test/Opa5\",\n\t\"pizza/test/integration/pages/Common\",\n\t\"sap/ui/test/opaQunit\",\n\t\"pizza/test/integration/pages/App\",\n\t\"pizza/test/integration/pages/Browser\",\n\t\"pizza/test/integration/pages/Master\",\n\t\"pizza/test/integration/pages/Detail\",\n\t\"pizza/test/integration/pages/NotFound\"\n], function (Opa5, Common) {\n\t\"use strict\";\n\tOpa5.extendConfig({\n\t\tarrangements: new Common(),\n\t\tviewNamespace: \"pizza.view.\"\n\t});\n\n\tsap.ui.require([\n\t\t\"pizza/test/integration/MasterJourney\",\n\t\t\"pizza/test/integration/NavigationJourney\",\n\t\t\"pizza/test/integration/NotFoundJourney\",\n\t\t\"pizza/test/integration/BusyJourney\",\n\t\t\"pizza/test/integration/FLPIntegrationJourney\"\n\t], function () {\n\t\tQUnit.start();\n\t});\n});",
		"pizza/test/unit/allTests.js": "sap.ui.define([\n\t\t\"test/unit/model/models\",\n\t\t\"test/unit/model/formatter\",\n\t\t\"test/unit/controller/App.controller\",\n\t\t\"test/unit/controller/ListSelector\",\n\t\t\"test/unit/model/grouper\",\n\t\t\"test/unit/model/GroupSortState\"\n\t], function() { \"use strict\"; });",
		"pizza/test/integration/pages/Master.js": "sap.ui.define([\n\t\t\"sap/ui/test/Opa5\",\n\t\t\"sap/ui/test/actions/Press\",\n\t\t\"sap/ui/test/actions/EnterText\",\n\t\t\"pizza/test/integration/pages/Common\",\n\t\t\"sap/ui/test/matchers/AggregationLengthEquals\",\n\t\t\"sap/ui/test/matchers/AggregationFilled\",\n\t\t\"sap/ui/test/matchers/PropertyStrictEquals\"\n\t], function(Opa5, Press, EnterText, Common, AggregationLengthEquals, AggregationFilled, PropertyStrictEquals) {\n\t\t\"use strict\";\n\n\t\tvar sViewName = \"Master\",\n\t\t\tsSomethingThatCannotBeFound = \"*#-Q@@||\",\n\t\t\tiGroupingBoundary = 100;\n\n\t\tOpa5.createPageObjects({\n\t\t\tonTheMasterPage : {\n\t\t\t\tbaseClass : Common,\n\n\t\t\t\tactions : {\n\n\t\t\t\t\tiWaitUntilTheListIsLoaded : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : new AggregationFilled({name : \"items\"}),\n\t\t\t\t\t\t\terrorMessage : \"The master list has not been loaded\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiWaitUntilTheFirstItemIsSelected : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : function(oList) {\n\t\t\t\t\t\t\t\t// wait until the list has a selected item\n\t\t\t\t\t\t\t\tvar oSelectedItem = oList.getSelectedItem();\n\t\t\t\t\t\t\t\treturn oSelectedItem && oList.getItems().indexOf(oSelectedItem) === 0;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The first item of the master list is not selected\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiSortTheListOnName : function () {\n\t\t\t\t\t\treturn this.iPressItemInSelectInFooter(\"sort-select\", \"masterSort1\");\n\t\t\t\t\t},\n\n\t\t\t\t\tiSortTheListOnUnitNumber : function () {\n\t\t\t\t\t\treturn this.iPressItemInSelectInFooter(\"sort-select\", \"masterSort2\");\n\t\t\t\t\t},\n\n\t\t\t\t\tiRemoveFilterFromTheList : function () {\n\t\t\t\t\t\treturn this.iPressItemInSelectInFooter(\"filter-select\", \"masterFilterNone\");\n\t\t\t\t\t},\n\n\t\t\t\t\tiFilterTheListLessThan100UoM : function () {\n\t\t\t\t\t\treturn this.iPressItemInSelectInFooter(\"filter-select\", \"masterFilter1\");\n\t\t\t\t\t},\n\n\t\t\t\t\tiFilterTheListMoreThan100UoM : function () {\n\t\t\t\t\t\treturn this.iPressItemInSelectInFooter(\"filter-select\", \"masterFilter2\");\n\t\t\t\t\t},\n\n\t\t\t\t\tiGroupTheList : function () {\n\t\t\t\t\t\treturn this.iPressItemInSelectInFooter(\"group-select\", \"masterGroup1\");\n\t\t\t\t\t},\n\n\t\t\t\t\tiRemoveListGrouping : function () {\n\t\t\t\t\t\treturn this.iPressItemInSelectInFooter(\"group-select\", \"masterGroupNone\");\n\t\t\t\t\t},\n\n\t\t\t\t\tiOpenViewSettingsDialog : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"filter-button\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tcheck : function () {\n\t\t\t\t\t\t\t\tvar oViewSettingsDialog = Opa5.getWindow().sap.ui.getCore().byId(\"viewSettingsDialog\");\n\t\t\t\t\t\t\t\t// check if the dialog is still open - wait until it is closed\n\t\t\t\t\t\t\t\t// view settings dialog has no is open function and no open close events so checking the domref is the only option here\n\t\t\t\t\t\t\t\t// if there is no view settings dialog yet, there is no need to wait\n\t\t\t\t\t\t\t\treturn !oViewSettingsDialog || oViewSettingsDialog.$().length === 0;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tactions : new Press(),\n\t\t\t\t\t\t\terrorMessage : \"Did not find the 'filter' button.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiSelectListItemInViewSettingsDialog : function (sListItemTitle) {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tsearchOpenDialogs : true,\n\t\t\t\t\t\t\tcontrolType : \"sap.m.StandardListItem\",\n\t\t\t\t\t\t\tmatchers :  new Opa5.matchers.PropertyStrictEquals({name : \"title\", value : sListItemTitle}),\n\t\t\t\t\t\t\tactions: new Press(),\n\t\t\t\t\t\t\terrorMessage : \"Did not find list item with title \" + sListItemTitle + \" in View Settings Dialog.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiPressOKInViewSelectionDialog : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tsearchOpenDialogs : true,\n\t\t\t\t\t\t\tcontrolType : \"sap.m.Button\",\n\t\t\t\t\t\t\tmatchers :  new Opa5.matchers.PropertyStrictEquals({name : \"text\", value : \"OK\"}),\n\t\t\t\t\t\t\tactions : new Press(),\n\t\t\t\t\t\t\terrorMessage : \"Did not find the ViewSettingDialog's 'OK' button.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiPressResetInViewSelectionDialog : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tsearchOpenDialogs : true,\n\t\t\t\t\t\t\tcontrolType : \"sap.m.Button\",\n\t\t\t\t\t\t\tmatchers : new Opa5.matchers.PropertyStrictEquals({name : \"icon\", value : \"sap-icon://refresh\"}),\n\t\t\t\t\t\t\tactions : new Press(),\n\t\t\t\t\t\t\terrorMessage : \"Did not find the ViewSettingDialog's 'Reset' button.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiPressItemInSelectInFooter : function (sSelect, sItem) {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : sSelect,\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tsuccess : function (oSelect) {\n\t\t\t\t\t\t\t\toSelect.open();\n\t\t\t\t\t\t\t\tthis.waitFor({\n\t\t\t\t\t\t\t\t\tid : sItem,\n\t\t\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\t\t\tsuccess : function(oElem){\n\t\t\t\t\t\t\t\t\t\toElem.$().trigger(\"tap\");\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\terrorMessage : \"Did not find the \" + sItem + \" element in select\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\terrorMessage : \"Did not find the \" + sSelect + \" select\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiRememberTheSelectedItem : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : function (oList) {\n\t\t\t\t\t\t\t\treturn oList.getSelectedItem();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsuccess : function (oListItem) {\n\t\t\t\t\t\t\t\tthis.iRememberTheListItem(oListItem);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The list does not have a selected item so nothing can be remembered\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiRememberTheIdOfListItemAtPosition : function (iPosition) {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : function (oList) {\n\t\t\t\t\t\t\t\treturn oList.getItems()[iPosition];\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsuccess : function (oListItem) {\n\t\t\t\t\t\t\t\tthis.iRememberTheListItem(oListItem);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The list does not have an item at the index \" + iPosition\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiRememberAnIdOfAnObjectThatsNotInTheList : function () {\n\t\t\t\t\t\treturn this.waitFor(this.createAWaitForAnEntitySet({\n\t\t\t\t\t\t\tentitySet : \"OrdersSet\",\n\t\t\t\t\t\t\tsuccess : function (aEntityData) {\n\t\t\t\t\t\t\t\tthis.waitFor({\n\t\t\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\t\t\tmatchers : new AggregationFilled({name: \"items\"}),\n\t\t\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\t\t\tvar sCurrentId,\n\t\t\t\t\t\t\t\t\t\t\taItemsNotInTheList = aEntityData.filter(function (oObject) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn !oList.getItems().some(function (oListItem) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn oListItem.getBindingContext().getProperty(\"OrderId\") === oObject.OrderId;\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\tif (!aItemsNotInTheList.length) {\n\t\t\t\t\t\t\t\t\t\t\t// Not enough items all of them are displayed so we take the last one\n\t\t\t\t\t\t\t\t\t\t\tsCurrentId = aEntityData[aEntityData.length - 1].OrderId;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tsCurrentId = aItemsNotInTheList[0].OrderId;\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tvar oCurrentItem = this.getContext().currentItem;\n\t\t\t\t\t\t\t\t\t\t// Construct a binding path since the list item is not created yet and we only have the id.\n\t\t\t\t\t\t\t\t\t\toCurrentItem.bindingPath = \"/\" + oList.getModel().createKey(\"OrdersSet\", {\n\t\t\t\t\t\t\t\t\t\t\tOrderId : sCurrentId\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\toCurrentItem.id = sCurrentId;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\terrorMessage : \"the model does not have a item that is not in the list\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t},\n\n\t\t\t\t\tiPressOnTheObjectAtPosition : function (iPositon) {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : function (oList) {\n\t\t\t\t\t\t\t\treturn oList.getItems()[iPositon];\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tactions : new Press(),\n\t\t\t\t\t\t\terrorMessage : \"List 'list' in view '\" + sViewName + \"' does not contain an ObjectListItem at position '\" + iPositon + \"'\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiSearchForTheFirstObject : function (){\n\t\t\t\t\t\tvar sFirstObjectTitle;\n\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers: new AggregationFilled({name : \"items\"}),\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\tsFirstObjectTitle = oList.getItems()[0].getTitle();\n\t\t\t\t\t\t\t\treturn this.iSearchForValue(new EnterText({text: sFirstObjectTitle}), new Press());\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"Did not find list items while trying to search for the first item.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiTypeSomethingInTheSearchThatCannotBeFoundAndTriggerRefresh : function () {\n\t\t\t\t\t\tvar fireRefreshButtonPressedOnSearchField = function (oSearchField) {\n\n\t\t\t\t\t\t\t/*eslint-disable new-cap */\n\t\t\t\t\t\t\tvar oEvent = jQuery.Event(\"touchend\");\n\t\t\t\t\t\t\t/*eslint-enable new-cap */\n\t\t\t\t\t\t\toEvent.originalEvent = {refreshButtonPressed: true, id: oSearchField.getId()};\n\t\t\t\t\t\t\toEvent.target = oSearchField;\n\t\t\t\t\t\t\toEvent.srcElement = oSearchField;\n\t\t\t\t\t\t\tjQuery.extend(oEvent, oEvent.originalEvent);\n\n\t\t\t\t\t\t\toSearchField.fireSearch(oEvent);\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn this.iSearchForValue([new EnterText({text: sSomethingThatCannotBeFound}), fireRefreshButtonPressedOnSearchField]);\n\t\t\t\t\t},\n\n\t\t\t\t\tiSearchForValue : function (aActions) {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"searchField\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tactions: aActions,\n\t\t\t\t\t\t\terrorMessage : \"Failed to find search field in Master view.'\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiClearTheSearch : function () {\n\t\t\t\t\t\t//can not use 'EnterText' action to enter empty strings (yet)\n\t\t\t\t\t\tvar fnClearSearchField = function(oSearchField) {\n\t\t\t\t\t\t\toSearchField.clear();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn this.iSearchForValue([fnClearSearchField]);\n\t\t\t\t\t},\n\n\t\t\t\t\tiSearchForSomethingWithNoResults : function () {\n\t\t\t\t\t\treturn this.iSearchForValue([new EnterText({text: sSomethingThatCannotBeFound}), new Press()]);\n\t\t\t\t\t},\n\n\t\t\t\t\tiRememberTheListItem : function (oListItem) {\n\t\t\t\t\t\tvar oBindingContext = oListItem.getBindingContext();\n\t\t\t\t\t\tthis.getContext().currentItem = {\n\t\t\t\t\t\t\tbindingPath: oBindingContext.getPath(),\n\t\t\t\t\t\t\tid: oBindingContext.getProperty(\"OrderId\"),\n\t\t\t\t\t\t\ttitle: oBindingContext.getProperty(\"CustomerName\")\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tassertions : {\n\n\t\t\t\t\tiShouldSeeTheBusyIndicator : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\t// we set the list busy, so we need to query the parent of the app\n\t\t\t\t\t\t\t\tOpa5.assert.ok(oList.getBusy(), \"The master list is busy\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The master list is not busy.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListGroupShouldBeFilteredOnUnitNumberValue20OrLess : function () {\n\t\t\t\t\t\treturn this.theListShouldBeFilteredOnUnitNumberValue(20, false, {iLow : 1, iHigh : 2});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListShouldContainAGroupHeader : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tcontrolType : \"sap.m.GroupHeaderListItem\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"Master list is grouped\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"Master list is not grouped\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListShouldContainOnlyFormattedUnitNumbers : function () {\n\t\t\t\t\t\treturn this.theUnitNumbersShouldHaveTwoDecimals(\"sap.m.ObjectListItem\",\n\t\t\t\t\t\t\tsViewName,\n\t\t\t\t\t\t\t\"Numbers in ObjectListItems numbers are properly formatted\",\n\t\t\t\t\t\t\t\"List has no entries which can be checked for their formatting\");\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListHeaderDisplaysZeroHits : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tid : \"page\",\n\t\t\t\t\t\t\tmatchers : new PropertyStrictEquals({name : \"title\", value : \"<ObjectName> (0)\"}),\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"The list header displays zero hits\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The list header still has items\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListHasEntries : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tmatchers : new AggregationFilled({\n\t\t\t\t\t\t\t\tname : \"items\"\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"The list has items\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The list had no items\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListShouldNotContainGroupHeaders : function () {\n\t\t\t\t\t\tfunction fnIsGroupHeader (oElement) {\n\t\t\t\t\t\t\treturn oElement.getMetadata().getName() === \"sap.m.GroupHeaderListItem\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tmatchers : function (oList) {\n\t\t\t\t\t\t\t\treturn !oList.getItems().some(fnIsGroupHeader);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsuccess : function() {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"Master list does not contain a group header although grouping has been removed.\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"Master list still contains a group header although grouping has been removed.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListShouldBeSortedAscendingOnUnitNumber : function () {\n\t\t\t\t\t\treturn this.theListShouldBeSortedAscendingOnField(\"TotalAmount\");\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListShouldBeSortedAscendingOnName : function () {\n\t\t\t\t\t\treturn this.theListShouldBeSortedAscendingOnField(\"CustomerName\");\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListShouldBeSortedAscendingOnField : function (sField) {\n\t\t\t\t\t\tfunction fnCheckSort (oList){\n\t\t\t\t\t\t\tvar oLastValue = null,\n\t\t\t\t\t\t\t\tfnIsOrdered = function (oElement) {\n\t\t\t\t\t\t\t\t\tif (!oElement.getBindingContext()) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tvar oCurrentValue = oElement.getBindingContext().getProperty(sField);\n\n\t\t\t\t\t\t\t\t\tif (oCurrentValue === undefined) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (!oLastValue || oCurrentValue >= oLastValue){\n\t\t\t\t\t\t\t\t\t\toLastValue = oCurrentValue;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\treturn oList.getItems().every(fnIsOrdered);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tmatchers : fnCheckSort,\n\t\t\t\t\t\t\tsuccess : function() {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"Master list has been sorted correctly for field '\" + sField + \"'.\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"Master list has not been sorted correctly for field '\" + sField + \"'.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListShouldBeFilteredOnUnitNumberValue : function(iThreshhold, bGreaterThan, oRange) {\n\n\t\t\t\t\t\tfunction fnCheckFilter (oList){\n\t\t\t\t\t\t\tvar fnIsGreaterThanMaxValue = function (oElement) {\n\t\t\t\t\t\t\t\tif (bGreaterThan) {\n\t\t\t\t\t\t\t\t\treturn oElement.getBindingContext().getProperty(\"UnitNumber\") < iThreshhold;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn oElement.getBindingContext().getProperty(\"UnitNumber\") > iThreshhold;\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tvar aItems = oList.getItems();\n\t\t\t\t\t\t\tif (oRange) {\n\t\t\t\t\t\t\t\taItems = aItems.slice(oRange.iLow, oRange.iHigh);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn !aItems.some(fnIsGreaterThanMaxValue);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : fnCheckFilter,\n\t\t\t\t\t\t\tsuccess : function(){\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"Master list has been filtered correctly with filter value '\" + iThreshhold + \"'.\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"Master list has not been filtered correctly with filter value '\" + iThreshhold + \"'.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheMasterListShouldBeFilteredOnUnitNumberValueMoreThanTheGroupBoundary : function(){\n\t\t\t\t\t\treturn this.theListShouldBeFilteredOnUnitNumberValue(iGroupingBoundary, true);\n\t\t\t\t\t},\n\n\t\t\t\t\ttheMasterListShouldBeFilteredOnUnitNumberValueLessThanTheGroupBoundary : function(){\n\t\t\t\t\t\treturn this.theListShouldBeFilteredOnUnitNumberValue(iGroupingBoundary);\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeTheList : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(oList, \"Found the object List\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"Can't see the master list.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListShowsOnlyObjectsWithTheSearchStringInTheirTitle : function () {\n\t\t\t\t\t\tthis.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : new AggregationFilled({name : \"items\"}),\n\t\t\t\t\t\t\tcheck : function(oList) {\n\t\t\t\t\t\t\t\tvar sTitle = oList.getItems()[0].getTitle(),\n\t\t\t\t\t\t\t\t\tbEveryItemContainsTheTitle = oList.getItems().every(function (oItem) {\n\t\t\t\t\t\t\t\t\t\treturn oItem.getTitle().indexOf(sTitle) !== -1;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn bEveryItemContainsTheTitle;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"Every item did contain the title\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The list did not have items\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListShouldHaveNEntries : function (iObjIndex) {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : [ new AggregationLengthEquals({name : \"items\", length : iObjIndex}) ],\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(oList.getItems().length, iObjIndex, \"The list has x items\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"List does not have \" + iObjIndex + \" entries.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListShouldHaveAllEntries : function () {\n\t\t\t\t\t\tvar aAllEntities,\n\t\t\t\t\t\t\tiExpectedNumberOfItems;\n\t\t\t\t\t\t// retrieve all OrdersSet to be able to check for the total amount\n\t\t\t\t\t\tthis.waitFor(this.createAWaitForAnEntitySet({\n\t\t\t\t\t\t\tentitySet : \"OrdersSet\",\n\t\t\t\t\t\t\tsuccess : function (aEntityData) {\n\t\t\t\t\t\t\t\taAllEntities = aEntityData;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : function (oList) {\n\t\t\t\t\t\t\t\t// If there are less items in the list than the growingThreshold, only check for this number.\n\t\t\t\t\t\t\t\tiExpectedNumberOfItems = Math.min(oList.getGrowingThreshold(), aAllEntities.length);\n\t\t\t\t\t\t\t\treturn new AggregationLengthEquals({name : \"items\", length : iExpectedNumberOfItems}).isMatching(oList);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(oList.getItems().length, iExpectedNumberOfItems, \"The growing list dsiplays all items\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"List does not display all entries.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeTheNoDataTextForNoSearchResults : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(oList.getNoDataText(), oList.getModel(\"i18n\").getProperty(\"masterListNoDataWithFilterOrSearchText\"), \"the list should show the no data text for search and filter\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"list does not show the no data text for search and filter\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheHeaderShouldDisplayAllEntries : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\tvar iExpectedLength = oList.getBinding(\"items\").getLength();\n\t\t\t\t\t\t\t\tthis.waitFor({\n\t\t\t\t\t\t\t\t\tid : \"page\",\n\t\t\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\t\t\tmatchers : new PropertyStrictEquals({name : \"title\", value : \"<ObjectName> (\" + iExpectedLength + \")\"}),\n\t\t\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"The master page header displays \" + iExpectedLength + \" items\");\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\terrorMessage : \"The  master page header does not display \" + iExpectedLength + \" items.\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"Header does not display the number of items in the list\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheFirstItemShouldBeSelected : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : new AggregationFilled({name : \"items\"}),\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(oList.getItems()[0], oList.getSelectedItem(), \"The first object is selected\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The first object is not selected.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheListShouldHaveNoSelection : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : function(oList) {\n\t\t\t\t\t\t\t\treturn !oList.getSelectedItem();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(oList.getSelectedItems().length, 0, \"The list selection is removed\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"List selection was not removed\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheRememberedListItemShouldBeSelected : function () {\n\t\t\t\t\t\tthis.waitFor({\n\t\t\t\t\t\t\tid : \"list\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : function (oList) {\n\t\t\t\t\t\t\t\treturn oList.getSelectedItem();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsuccess : function (oSelectedItem) {\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(oSelectedItem.getTitle(), this.getContext().currentItem.title, \"The list selection is incorrect\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The list has no selection\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/PhoneJourneys.js": "jQuery.sap.require(\"sap.ui.qunit.qunit-css\");\njQuery.sap.require(\"sap.ui.thirdparty.qunit\");\njQuery.sap.require(\"sap.ui.qunit.qunit-junit\");\nQUnit.config.autostart = false;\n\nsap.ui.require([\n\t\"sap/ui/test/Opa5\",\n\t\"pizza/test/integration/pages/Common\",\n\t\"sap/ui/test/opaQunit\",\n\t\"pizza/test/integration/pages/App\",\n\t\"pizza/test/integration/pages/Browser\",\n\t\"pizza/test/integration/pages/Master\",\n\t\"pizza/test/integration/pages/Detail\",\n\t\"pizza/test/integration/pages/NotFound\"\n], function (Opa5, Common) {\n\t\"use strict\";\n\tOpa5.extendConfig({\n\t\tarrangements: new Common(),\n\t\tviewNamespace: \"pizza.view.\"\n\t});\n\n\tsap.ui.require([\n\t\t\"pizza/test/integration/NavigationJourneyPhone\",\n\t\t\"pizza/test/integration/NotFoundJourneyPhone\",\n\t\t\"pizza/test/integration/BusyJourneyPhone\"\n\t], function () {\n\t\tQUnit.start();\n\t});\n});",
		"pizza/test/integration/pages/Common.js": "sap.ui.define([\n\t\t\"sap/ui/test/Opa5\"\n\t], function(Opa5) {\n\t\t\"use strict\";\n\n\t\tfunction getFrameUrl (sHash, sUrlParameters) {\n\t\t\tvar sUrl = jQuery.sap.getResourcePath(\"pizza/app\", \".html\");\n\t\t\tsHash = sHash || \"\";\n\t\t\tsUrlParameters = sUrlParameters ? \"?\" + sUrlParameters : \"\";\n\n\t\t\tif (sHash) {\n\t\t\t\tsHash = \"#BestInPizzaApp-display&/\" + (sHash.indexOf(\"/\") === 0 ? sHash.substring(1) : sHash);\n\t\t\t} else {\n\t\t\t\tsHash = \"#BestInPizzaApp-display\";\n\t\t\t}\n\n\t\t\treturn sUrl + sUrlParameters + sHash;\n\t\t}\n\n\t\treturn Opa5.extend(\"pizza.test.integration.pages.Common\", {\n\n\t\t\tiStartTheApp : function (oOptions) {\n\t\t\t\toOptions = oOptions || {};\n\t\t\t\t// Start the app with a minimal delay to make tests run fast but still async to discover basic timing issues\n\t\t\t\tthis.iStartMyAppInAFrame(getFrameUrl(oOptions.hash, \"serverDelay=50\"));\n\t\t\t},\n\n\t\t\tiStartTheAppWithDelay : function (sHash, iDelay) {\n\t\t\t\tthis.iStartMyAppInAFrame(getFrameUrl(sHash, \"serverDelay=\" + iDelay));\n\t\t\t},\n\n\t\t\tiLookAtTheScreen : function () {\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\tiStartMyAppOnADesktopToTestErrorHandler : function (sParam) {\n\t\t\t\tthis.iStartMyAppInAFrame(getFrameUrl(\"\", sParam));\n\t\t\t},\n\n\t\t\tcreateAWaitForAnEntitySet : function  (oOptions) {\n\t\t\t\treturn {\n\t\t\t\t\tsuccess: function () {\n\t\t\t\t\t\tvar bMockServerAvailable = false,\n\t\t\t\t\t\t\taEntitySet;\n\n\t\t\t\t\t\tthis.getMockServer().then(function (oMockServer) {\n\t\t\t\t\t\t\taEntitySet = oMockServer.getEntitySetData(oOptions.entitySet);\n\t\t\t\t\t\t\tbMockServerAvailable = true;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tcheck: function () {\n\t\t\t\t\t\t\t\treturn bMockServerAvailable;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\toOptions.success.call(this, aEntitySet);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tgetMockServer : function () {\n\t\t\t\treturn new Promise(function (success) {\n\t\t\t\t\tOpa5.getWindow().sap.ui.require([\"pizza/localService/mockserver\"], function (mockserver) {\n\t\t\t\t\t\tsuccess(mockserver.getMockServer());\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\ttheUnitNumbersShouldHaveTwoDecimals : function (sControlType, sViewName, sSuccessMsg, sErrMsg) {\n\t\t\t\tvar rTwoDecimalPlaces =  /^-?\\d+\\.\\d{2}$/;\n\n\t\t\t\treturn this.waitFor({\n\t\t\t\t\tcontrolType : sControlType,\n\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\tsuccess : function (aNumberControls) {\n\t\t\t\t\t\tOpa5.assert.ok(aNumberControls.every(function(oNumberControl){\n\t\t\t\t\t\t\t\treturn rTwoDecimalPlaces.test(oNumberControl.getNumber());\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tsSuccessMsg);\n\t\t\t\t\t},\n\t\t\t\t\terrorMessage : sErrMsg\n\t\t\t\t});\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/pages/App.js": "sap.ui.define([\n\t\t\"sap/ui/test/Opa5\",\n\t\t\"pizza/test/integration/pages/Common\",\n\t\t\"sap/ui/test/matchers/PropertyStrictEquals\"\n\t], function(Opa5, Common, PropertyStrictEquals) {\n\t\t\"use strict\";\n\n\t\tvar sViewName = \"App\",\n\t\t\tsAppControl = \"idAppControl\";\n\n\t\tOpa5.createPageObjects({\n\t\t\tonTheAppPage : {\n\t\t\t\tbaseClass : Common,\n\n\t\t\t\tactions : {\n\n\t\t\t\t\tiWaitUntilTheBusyIndicatorIsGone : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : sAppControl,\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\t// inline-matcher directly as function\n\t\t\t\t\t\t\tmatchers : function(oRootView) {\n\t\t\t\t\t\t\t\t// we set the view busy, so we need to query the parent of the app\n\t\t\t\t\t\t\t\treturn oRootView.getParent().getBusy() === false;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The app is still busy.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tassertions : {\n\n\t\t\t\t\tiShouldSeeTheBusyIndicator : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : sAppControl,\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tsuccess : function (oRootView) {\n\t\t\t\t\t\t\t\t// we set the view busy, so we need to query the parent of the app\n\t\t\t\t\t\t\t\tOpa5.assert.ok(oRootView.getParent().getBusy(), \"The app is busy\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The app is not busy.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeTheMessageBox : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tsearchOpenDialogs: true,\n\t\t\t\t\t\t\tcontrolType: \"sap.m.Dialog\",\n\t\t\t\t\t\t\tmatchers : new PropertyStrictEquals({ name: \"type\", value: \"Message\"}),\n\t\t\t\t\t\t\tsuccess: function () {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"The correct MessageBox was shown\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/pages/Browser.js": "sap.ui.define([\n\t\t\"sap/ui/test/Opa5\",\n\t\t\"pizza/test/integration/pages/Common\"\n\t], function(Opa5, Common) {\n\t\t\"use strict\";\n\n\t\tOpa5.createPageObjects({\n\t\t\tonTheBrowserPage : {\n\t\t\t\tbaseClass : Common,\n\n\t\t\t\tactions : {\n\n\t\t\t\t\tiChangeTheHashToObjectN : function (iObjIndex) {\n\t\t\t\t\t\treturn this.waitFor(this.createAWaitForAnEntitySet({\n\t\t\t\t\t\t\tentitySet : \"Objects\",\n\t\t\t\t\t\t\tsuccess : function (aEntitySet) {\n\t\t\t\t\t\t\t\tOpa5.getHashChanger().setHash(\"/OrdersSet/\" + aEntitySet[iObjIndex].OrderId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t},\n\n\t\t\t\t\tiChangeTheHashToTheRememberedItem : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tvar sObjectId = this.getContext().currentItem.id;\n\t\t\t\t\t\t\t\tOpa5.getHashChanger().setHash(\"/OrdersSet/\" + sObjectId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiChangeTheHashToSomethingInvalid : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tOpa5.getHashChanger().setHash(\"/somethingInvalid\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tassertions : {\n\n\t\t\t\t\tiShouldSeeTheHashForObjectN : function (iObjIndex) {\n\t\t\t\t\t\treturn this.waitFor(this.createAWaitForAnEntitySet({\n\t\t\t\t\t\t\tentitySet : \"Objects\",\n\t\t\t\t\t\t\tsuccess : function (aEntitySet) {\n\t\t\t\t\t\t\t\tvar oHashChanger = Opa5.getHashChanger(),\n\t\t\t\t\t\t\t\t\tsHash = oHashChanger.getHash();\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(sHash, \"OrdersSet/\" + aEntitySet[iObjIndex].OrderId, \"The Hash is not correct\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeTheHashForTheRememberedObject : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tvar sObjectId = this.getContext().currentItem.id,\n\t\t\t\t\t\t\t\t\toHashChanger = Opa5.getHashChanger(),\n\t\t\t\t\t\t\t\t\tsHash = oHashChanger.getHash();\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(sHash, \"OrdersSet/\" + sObjectId, \"The Hash is not correct\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeAnEmptyHash : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tvar oHashChanger = Opa5.getHashChanger(),\n\t\t\t\t\t\t\t\t\tsHash = oHashChanger.getHash();\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(sHash, \"\", \"The Hash should be empty\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The Hash is not Correct!\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/pages/NotFound.js": "sap.ui.define([\n\t\t\"sap/ui/test/Opa5\",\n\t\t\"sap/ui/test/actions/Press\",\n\t\t\"sap/ui/test/matchers/PropertyStrictEquals\",\n\t\t\"pizza/test/integration/pages/Common\"\n\t], function(Opa5, Press, PropertyStrictEquals, Common) {\n\t\t\"use strict\";\n\n\t\tvar sNotFoundPageId = \"page\",\n\t\t\tsNotFoundView = \"NotFound\",\n\t\t\tsDetailNotFoundView = \"DetailObjectNotFound\";\n\n\t\tOpa5.createPageObjects({\n\t\t\tonTheNotFoundPage : {\n\t\t\t\tbaseClass : Common,\n\n\t\t\t\tactions : {\n\n\t\t\t\t\tiPressTheBackButton : function (sViewName) {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tcontrolType : \"sap.m.Button\",\n\t\t\t\t\t\t\tmatchers: new PropertyStrictEquals({name : \"type\", value : \"Back\"}),\n\t\t\t\t\t\t\tactions : new Press(),\n\t\t\t\t\t\t\terrorMessage : \"Did not find the back button\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tassertions : {\n\n\t\t\t\t\tiShouldSeeTheNotFoundGeneralPage : function (sPageId, sPageViewName) {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tcontrolType : \"sap.m.MessagePage\",\n\t\t\t\t\t\t\tviewName : sPageViewName,\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"Shows the message page\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"Did not reach the empty page\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeTheNotFoundPage : function () {\n\t\t\t\t\t\treturn this.iShouldSeeTheNotFoundGeneralPage(sNotFoundPageId, sNotFoundView);\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeTheObjectNotFoundPage : function () {\n\t\t\t\t\t\treturn this.iShouldSeeTheNotFoundGeneralPage(sNotFoundPageId, sDetailNotFoundView);\n\t\t\t\t\t},\n\n\t\t\t\t\ttheNotFoundPageShouldSayResourceNotFound : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : sNotFoundPageId,\n\t\t\t\t\t\t\tviewName : sNotFoundView,\n\t\t\t\t\t\t\tsuccess : function (oPage) {\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(oPage.getTitle(), oPage.getModel(\"i18n\").getProperty(\"notFoundTitle\"), \"The not found text is shown as title\");\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(oPage.getText(), oPage.getModel(\"i18n\").getProperty(\"notFoundText\"), \"The resource not found text is shown\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"Did not display the resource not found text\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheNotFoundPageShouldSayObjectNotFound : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : sNotFoundPageId,\n\t\t\t\t\t\t\tviewName : sDetailNotFoundView,\n\t\t\t\t\t\t\tsuccess : function (oPage) {\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(oPage.getTitle(), oPage.getModel(\"i18n\").getProperty(\"detailTitle\"), \"The object text is shown as title\");\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(oPage.getText(), oPage.getModel(\"i18n\").getProperty(\"noObjectFoundText\"), \"The object not found text is shown\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"Did not display the object not found text\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/pages/Detail.js": "sap.ui.define([\n\t\t\"sap/ui/test/Opa5\",\n\t\t\"sap/ui/test/actions/Press\",\n\t\t\"pizza/test/integration/pages/Common\",\n\t\t\"sap/ui/test/matchers/AggregationLengthEquals\",\n\t\t\"sap/ui/test/matchers/AggregationFilled\",\n\t\t\"sap/ui/test/matchers/PropertyStrictEquals\"\n\t], function(Opa5, Press, Common, AggregationLengthEquals, AggregationFilled, PropertyStrictEquals) {\n\t\t\"use strict\";\n\n\t\tvar sViewName = \"Detail\";\n\n\t\tOpa5.createPageObjects({\n\t\t\tonTheDetailPage : {\n\t\t\t\tbaseClass : Common,\n\n\t\t\t\tactions : {\n\n\t\t\t\t\tiPressTheBackButton : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"page\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tactions: new Press(),\n\t\t\t\t\t\t\terrorMessage : \"Did not find the nav button on detail page\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiPressOnTheShareButton : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tcontrolType: \"sap.m.Button\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : new sap.ui.test.matchers.PropertyStrictEquals({\n\t\t\t\t\t\t\t\tname : \"icon\",\n\t\t\t\t\t\t\t\tvalue : \"sap-icon://action\"\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tactions : new Press(),\n\t\t\t\t\t\t\terrorMessage : \"Did not find the share button on detail page\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tassertions : {\n\n\t\t\t\t\tiShouldSeeTheBusyIndicator : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"page\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tsuccess : function (oPage) {\n\t\t\t\t\t\t\t\t// we set the view busy, so we need to query the parent of the app\n\t\t\t\t\t\t\t\tOpa5.assert.ok(oPage.getBusy(), \"The detail view is busy\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The detail view is not busy.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeNoBusyIndicator : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"page\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : function (oPage) {\n\t\t\t\t\t\t\t\treturn !oPage.getBusy();\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsuccess : function (oPage) {\n\t\t\t\t\t\t\t\t// we set the view busy, so we need to query the parent of the app\n\t\t\t\t\t\t\t\tOpa5.assert.ok(!oPage.getBusy(), \"The detail view is not busy\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The detail view is busy.\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheObjectPageShowsTheFirstObject : function () {\n\t\t\t\t\t\treturn this.iShouldBeOnTheObjectNPage(0);\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldBeOnTheObjectNPage : function (iObjIndex) {\n\t\t\t\t\t\treturn this.waitFor(this.createAWaitForAnEntitySet({\n\t\t\t\t\t\t\tentitySet : \"OrdersSet\",\n\t\t\t\t\t\t\tsuccess : function (aEntitySet) {\n\t\t\t\t\t\t\t\tvar sItemName = aEntitySet[iObjIndex].Name;\n\n\t\t\t\t\t\t\t\tthis.waitFor({\n\t\t\t\t\t\t\t\t\tcontrolType : \"sap.m.ObjectHeader\",\n\t\t\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\t\t\tmatchers : new PropertyStrictEquals({name : \"title\", value: aEntitySet[iObjIndex].Name}),\n\t\t\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"was on the first object page with the name \" + sItemName);\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\terrorMessage : \"First object is not shown\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeTheRememberedObject : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tvar sBindingPath = this.getContext().currentItem.bindingPath;\n\t\t\t\t\t\t\t\tthis._waitForPageBindingPath(sBindingPath);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\t_waitForPageBindingPath : function (sBindingPath) {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"page\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : function (oPage) {\n\t\t\t\t\t\t\t\treturn oPage.getBindingContext() && oPage.getBindingContext().getPath() === sBindingPath;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsuccess : function (oPage) {\n\t\t\t\t\t\t\t\tOpa5.assert.strictEqual(oPage.getBindingContext().getPath(), sBindingPath, \"was on the remembered detail page\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"Remembered object \" + sBindingPath + \" is not shown\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeTheObjectLineItemsList : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"lineItemsList\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(oList, \"Found the line items list.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheLineItemsListShouldHaveTheCorrectNumberOfItems : function () {\n\t\t\t\t\t\treturn this.waitFor(this.createAWaitForAnEntitySet({\n\t\t\t\t\t\t\tentitySet : \"NavOrderItems\",\n\t\t\t\t\t\t\tsuccess : function (aEntitySet) {\n\n\t\t\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\t\t\tid : \"lineItemsList\",\n\t\t\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\t\t\tmatchers : new AggregationFilled({name : \"items\"}),\n\t\t\t\t\t\t\t\t\tcheck: function (oList) {\n\n\t\t\t\t\t\t\t\t\t\tvar sObjectID = oList.getBindingContext().getProperty(\"OrderId\");\n\n\t\t\t\t\t\t\t\t\t\tvar iLength = aEntitySet.filter(function (oLineItem) {\n\t\t\t\t\t\t\t\t\t\t\treturn oLineItem.OrderId === sObjectID;\n\t\t\t\t\t\t\t\t\t\t}).length;\n\n\t\t\t\t\t\t\t\t\t\treturn oList.getItems().length === iLength;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"The list has the correct number of items\");\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\terrorMessage : \"The list does not have the correct number of items.\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}));\n\t\t\t\t\t},\n\n\t\t\t\t\ttheDetailViewShouldContainOnlyFormattedUnitNumbers : function () {\n\t\t\t\t\t\treturn this.theUnitNumbersShouldHaveTwoDecimals(\"sap.m.ObjectHeader\",\n\t\t\t\t\t\t\tsViewName,\n\t\t\t\t\t\t\t\"Object header are properly formatted\",\n\t\t\t\t\t\t\t\"Object view has no entries which can be checked for their formatting\");\n\t\t\t\t\t},\n\n\t\t\t\t\ttheLineItemsTableShouldContainOnlyFormattedUnitNumbers : function () {\n\t\t\t\t\t\treturn this.theUnitNumbersShouldHaveTwoDecimals(\"sap.m.ObjectNumber\",\n\t\t\t\t\t\t\tsViewName,\n\t\t\t\t\t\t\t\"Object numbers are properly formatted\",\n\t\t\t\t\t\t\t\"LineItmes Table has no entries which can be checked for their formatting\");\n\t\t\t\t\t},\n\n\t\t\t\t\ttheLineItemsHeaderShouldDisplayTheAmountOfEntries : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"lineItemsList\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : new AggregationFilled({name : \"items\"}),\n\t\t\t\t\t\t\tsuccess : function (oList) {\n\t\t\t\t\t\t\t\tvar iNumberOfItems = oList.getItems().length;\n\t\t\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\t\t\tid : \"lineItemsHeader\",\n\t\t\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\t\t\tmatchers : new PropertyStrictEquals({name: \"text\", value: \"<LineItemNamePlural> (\" + iNumberOfItems + \")\"}),\n\t\t\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"The line item list displays \" + iNumberOfItems + \" items\");\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\terrorMessage : \"The line item list does not display \" + iNumberOfItems + \" items.\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeTheShareEmailButton : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"shareEmail\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"The E-Mail button is visible\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The E-Mail button was not found\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\tiShouldSeeTheShareTileButton : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"shareTile\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"The Save as Tile button is visible\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The Save as Tile  button was not found\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\n\t\t\t\t\ttheShareTileButtonShouldContainTheRememberedObjectName : function () {\n\t\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\t\tid : \"shareTile\",\n\t\t\t\t\t\t\tviewName : sViewName,\n\t\t\t\t\t\t\tmatchers : function (oButton) {\n\t\t\t\t\t\t\t\tvar sObjectName = this.getContext().currentItem.title;\n\t\t\t\t\t\t\t\tvar sTitle = oButton.getTitle();\n\t\t\t\t\t\t\t\treturn sTitle && sTitle.indexOf(sObjectName) > -1;\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\tsuccess : function () {\n\t\t\t\t\t\t\t\tOpa5.assert.ok(true, \"The Save as Tile button contains the oject name\");\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\terrorMessage : \"The Save as Tile did not contain the object name\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/FLPIntegrationJourney.js": "sap.ui.define([\n\t\t\"sap/ui/test/opaQunit\"\n\t], function (opaTest) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"FLP Integration\");\n\n\t\topaTest(\"Should open the share menu and display the share buttons on the detail page\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheApp();\n\n\t\t\t// Actions\n\t\t\tWhen.onTheMasterPage.iRememberTheSelectedItem();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheDetailPage.iShouldSeeTheRememberedObject();\n\n\t\t\t// Actions\n\t\t\tWhen.onTheDetailPage.iPressOnTheShareButton();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheDetailPage.iShouldSeeTheShareEmailButton().\n\t\t\t\tand.iShouldSeeTheShareTileButton().\n\t\t\t\tand.theShareTileButtonShouldContainTheRememberedObjectName().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/BusyJourney.js": "sap.ui.define([\n\t\t\"sap/ui/test/opaQunit\"\n\t], function (opaTest) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"Desktop busy indication\");\n\n\t\topaTest(\"Should see a global busy indication while loading the metadata\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheAppWithDelay(\"\", 5000);\n\n\t\t\t// Actions\n\t\t\tWhen.onTheAppPage.iLookAtTheScreen();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheAppPage.iShouldSeeTheBusyIndicator().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t\topaTest(\"Should see a busy indication on the master and detail after loading the metadata\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheAppWithDelay(\"\", 2000);\n\n\t\t\t// Actions\n\t\t\tWhen.onTheAppPage.iWaitUntilTheBusyIndicatorIsGone();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.iShouldSeeTheBusyIndicator().\n\t\t\t\tand.theListHeaderDisplaysZeroHits();\n\t\t\tThen.onTheDetailPage.iShouldSeeTheBusyIndicator().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/NavigationJourneyPhone.js": "sap.ui.define([\n\t\t\"sap/ui/test/opaQunit\"\n\t], function (opaTest) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"Phone navigation\");\n\n\t\topaTest(\"Should see the objects list\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheApp();\n\n\t\t\t//Actions\n\t\t\tWhen.onTheMasterPage.iLookAtTheScreen();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.iShouldSeeTheList();\n\t\t\tThen.onTheBrowserPage.iShouldSeeAnEmptyHash();\n\t\t});\n\n\t\topaTest(\"Should react on hashchange\", function (Given, When, Then) {\n\t\t\t// Actions\n\t\t\tWhen.onTheMasterPage.iRememberTheIdOfListItemAtPosition(3);\n\t\t\tWhen.onTheBrowserPage.iChangeTheHashToTheRememberedItem();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheDetailPage.iShouldSeeTheRememberedObject();\n\t\t});\n\n\t\topaTest(\"Detail Page Shows Object Details\", function (Given, When, Then) {\n\t\t\t// Actions\n\t\t\tWhen.onTheDetailPage.iLookAtTheScreen();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheDetailPage.iShouldSeeTheObjectLineItemsList().\n\t\t\t\tand.theLineItemsListShouldHaveTheCorrectNumberOfItems().\n\t\t\t\tand.theLineItemsHeaderShouldDisplayTheAmountOfEntries();\n\t\t});\n\n\t\topaTest(\"Should navigate on press\", function (Given, When, Then) {\n\t\t\t// Actions\n\t\t\tWhen.onTheDetailPage.iPressTheBackButton();\n\t\t\tWhen.onTheMasterPage.iRememberTheIdOfListItemAtPosition(2).\n\t\t\t\tand.iPressOnTheObjectAtPosition(2);\n\n\t\t\t// Assertions\n\t\t\tThen.onTheDetailPage.iShouldSeeTheRememberedObject().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/MasterJourney.js": "sap.ui.define([\n\t\t\"sap/ui/test/opaQunit\"\n\t], function (opaTest) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"Master List\");\n\n\t\topaTest(\"Should see the master list with all entries\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheApp();\n\n\t\t\t//Actions\n\t\t\tWhen.onTheMasterPage.iLookAtTheScreen();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.iShouldSeeTheList().\n\t\t\t\tand.theListShouldHaveAllEntries().\n\t\t\t\tand.theHeaderShouldDisplayAllEntries().\n\t\t\t\tand.theListShouldContainOnlyFormattedUnitNumbers();\n\t\t});\n\n\t\topaTest(\"Search for the First object should deliver results that contain the firstObject in the name\", function (Given, When, Then) {\n\t\t\t//Actions\n\t\t\tWhen.onTheMasterPage.iSearchForTheFirstObject();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.theListShowsOnlyObjectsWithTheSearchStringInTheirTitle();\n\t\t});\n\n\t\topaTest(\"Entering something that cannot be found into search field and pressing search field's refresh should leave the list as it was\", function (Given, When, Then) {\n\t\t\t//Actions\n\t\t\tWhen.onTheMasterPage.iTypeSomethingInTheSearchThatCannotBeFoundAndTriggerRefresh();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.theListHasEntries();\n\t\t});\n\n\t\topaTest(\"Entering something that cannot be found into search field and pressing 'search' should display the list's 'not found' message\", function (Given, When, Then) {\n\t\t\t//Actions\n\t\t\tWhen.onTheMasterPage.iSearchForSomethingWithNoResults();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.iShouldSeeTheNoDataTextForNoSearchResults().\n\t\t\t\tand.theListHeaderDisplaysZeroHits();\n\t\t});\n\n\t\topaTest(\"Should display items again if the searchfield is emptied\", function (Given, When, Then) {\n\t\t\t//Actions\n\t\t\tWhen.onTheMasterPage.iClearTheSearch();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.theListShouldHaveAllEntries();\n\t\t});\n\n\t\topaTest(\"MasterList Sorting on UnitNumber\", function(Given, When, Then) {\n\t\t\t// Actions\n\t\t\tWhen.onTheMasterPage.iSortTheListOnUnitNumber();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.theListShouldBeSortedAscendingOnUnitNumber();\n\t\t});\n\n\t\topaTest(\"MasterList Sorting on Name\", function(Given, When, Then) {\n\t\t\t// Actions\n\t\t\tWhen.onTheMasterPage.iSortTheListOnName();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.theListShouldBeSortedAscendingOnName();\n\t\t});\n\n\t\topaTest(\"MasterList Filtering on TotalAmount less than 100\", function(Given, When, Then) {\n\n\t\t\t// Action\n\t\t\tWhen.onTheMasterPage.iOpenViewSettingsDialog().\n\t\t\t\tand.iSelectListItemInViewSettingsDialog(\"<TotalAmount>\").\n\t\t\t\tand.iSelectListItemInViewSettingsDialog(\"<100 <Currency>\").\n\t\t\t\tand.iPressOKInViewSelectionDialog();\n\n\t\t\t// Assertion\n\t\t\tThen.onTheMasterPage.theMasterListShouldBeFilteredOnUnitNumberValueLessThanTheGroupBoundary();\n\t\t});\n\n\t\topaTest(\"MasterList Filtering on TotalAmount more than 100\", function(Given, When, Then) {\n\t\t\t// Action\n\t\t\tWhen.onTheMasterPage.iOpenViewSettingsDialog().\n\t\t\t\tand.iSelectListItemInViewSettingsDialog(\">100 <Currency>\").\n\t\t\t\tand.iPressOKInViewSelectionDialog();\n\n\t\t\t// Assertion\n\t\t\tThen.onTheMasterPage.theMasterListShouldBeFilteredOnUnitNumberValueMoreThanTheGroupBoundary();\n\t\t});\n\n\t\topaTest(\"MasterList remove filter should display all items\", function(Given, When, Then) {\n\t\t\t// Action\n\t\t\tWhen.onTheMasterPage.iOpenViewSettingsDialog().\n\t\t\t\tand.iPressResetInViewSelectionDialog().\n\t\t\t\tand.iPressOKInViewSelectionDialog();\n\n\t\t\t// Assertion\n\t\t\tThen.onTheMasterPage.theListShouldHaveAllEntries();\n\t\t});\n\n\t\topaTest(\"MasterList grouping created group headers\", function(Given, When, Then) {\n\t\t\t// Action\n\t\t\tWhen.onTheMasterPage.iGroupTheList();\n\n\t\t\t// Assertion\n\t\t\tThen.onTheMasterPage.theListShouldContainAGroupHeader();\n\t\t});\n\n\t\topaTest(\"Remove grouping from MasterList delivers initial list\", function(Given, When, Then) {\n\t\t\t// Action\n\t\t\tWhen.onTheMasterPage.iRemoveListGrouping();\n\n\t\t\t// Assertion\n\t\t\tThen.onTheMasterPage.theListShouldNotContainGroupHeaders().\n\t\t\t\tand.theListShouldHaveAllEntries();\n\t\t});\n\n\t\topaTest(\"Grouping the master list and filtering it by the object identifier should deliver the initial list\", function(Given, When, Then) {\n\t\t\t// Action\n\t\t\tWhen.onTheMasterPage.iGroupTheList().\n\t\t\t\tand.iSortTheListOnName();\n\n\t\t\t// Assertion\n\t\t\tThen.onTheMasterPage.theListShouldNotContainGroupHeaders().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/NotFoundJourneyPhone.js": "sap.ui.define([\n\t\t\"sap/ui/test/opaQunit\"\n\t], function (opaTest) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"Phone not found\");\n\n\t\topaTest(\"Should see the not found page if the hash is something that matches no route\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheApp({ hash : \"somethingThatDoesNotExist\" });\n\n\t\t\t// Actions\n\t\t\tWhen.onTheNotFoundPage.iLookAtTheScreen();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheNotFoundPage.iShouldSeeTheNotFoundPage().\n\t\t\t\tand.theNotFoundPageShouldSayResourceNotFound();\n\t\t});\n\n\t\topaTest(\"Should end up on the master list, if the back button is pressed\", function (Given, When, Then) {\n\t\t\t// Actions\n\t\t\tWhen.onTheNotFoundPage.iPressTheBackButton(\"NotFound\");\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.iShouldSeeTheList().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t\topaTest(\"Should see the not found master and detail page if an invalid object id has been called\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheApp({ hash : \"/OrdersSet/SomeInvalidObjectId\" });\n\n\t\t\t// Actions\n\t\t\tWhen.onTheNotFoundPage.iLookAtTheScreen();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheNotFoundPage.iShouldSeeTheObjectNotFoundPage().\n\t\t\t\tand.theNotFoundPageShouldSayObjectNotFound();\n\t\t});\n\n\t\topaTest(\"Should end up on the master list, if the back button is pressed\", function (Given, When, Then) {\n\t\t\t// Actions\n\t\t\tWhen.onTheNotFoundPage.iPressTheBackButton(\"DetailObjectNotFound\");\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.iShouldSeeTheList().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t\topaTest(\"Should see the not found text for no search results\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheApp();\n\n\t\t\t// Actions\n\t\t\tWhen.onTheMasterPage.iSearchForSomethingWithNoResults();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.iShouldSeeTheNoDataTextForNoSearchResults().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t}\n);",
		"pizza/test/integration/BusyJourneyPhone.js": "sap.ui.define([\n\t\t\"sap/ui/test/opaQunit\"\n\t], function (opaTest) {\n\t\t\"use strict\";\n\n\t\tQUnit.module(\"Phone busy indication\");\n\n\t\topaTest(\"Should see a global busy indication while loading the metadata\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheAppWithDelay(\"\", 5000);\n\n\t\t\t//Actions\n\t\t\tWhen.onTheAppPage.iLookAtTheScreen();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheAppPage.iShouldSeeTheBusyIndicator().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t\topaTest(\"Should see a busy indication on the master after loading the metadata\", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartTheAppWithDelay(\"\", 2000);\n\n\t\t\t//Actions\n\t\t\tWhen.onTheAppPage.iWaitUntilTheBusyIndicatorIsGone();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheMasterPage.iShouldSeeTheBusyIndicator().\n\t\t\t\tand.iTeardownMyAppFrame();\n\t\t});\n\n\t}\n);",
		"pizza/localService/mockserver.js": "sap.ui.define([\n\t\t\"sap/ui/core/util/MockServer\"\n\t], function (MockServer) {\n\t\t\"use strict\";\n\n\t\tvar oMockServer,\n\t\t\t_sAppModulePath = \"pizza/\",\n\t\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Initializes the mock server.\n\t\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t\t * @public\n\t\t\t */\n\n\t\t\tinit : function () {\n\t\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\n\t\t\t\t\tsEntity = \"OrdersSet\",\n\t\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\n\t\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t\t// ensure there is a trailing slash\n\t\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\";\n\n\t\t\t\toMockServer = new MockServer({\n\t\t\t\t\trootUri : sMockServerUrl\n\t\t\t\t});\n\n\t\t\t\t// configure mock server with a delay of 1s\n\t\t\t\tMockServer.config({\n\t\t\t\t\tautoRespond : true,\n\t\t\t\t\tautoRespondAfter : (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t\t});\n\n\t\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\t\tsMockdataBaseUrl : sJsonFilesUrl,\n\t\t\t\t\tbGenerateMissingMockData : true\n\t\t\t\t});\n\n\t\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\t\tfnResponse = function (iErrCode, sMessage, aRequest) {\n\t\t\t\t\t\taRequest.response = function(oXhr){\n\t\t\t\t\t\t\toXhr.respond(iErrCode, {\"Content-Type\": \"text/plain;charset=utf-8\"}, sMessage);\n\t\t\t\t\t\t};\n\t\t\t\t\t};\n\n\t\t\t\t// handling the metadata error test\n\t\t\t\tif (oUriParameters.get(\"metadataError\")) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Handling request errors\n\t\t\t\tif (sErrorParam) {\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\toMockServer.start();\n\n\t\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t\t * @returns {sap.ui.core.util.MockServer} the mockserver instance\n\t\t\t */\n\t\t\tgetMockServer : function () {\n\t\t\t\treturn oMockServer;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"pizza/model/GroupSortState.js": "sap.ui.define([\n\t\t\"sap/ui/base/Object\",\n\t\t\"sap/ui/model/Sorter\"\n\t], function (BaseObject, Sorter) {\n\t\"use strict\";\n\n\treturn BaseObject.extend(\"pizza.model.GroupSortState\", {\n\n\t\t/**\n\t\t * Creates sorters and groupers for the master list.\n\t\t * Since grouping also means sorting, this class modifies the viewmodel.\n\t\t * If a user groups by a field, and there is a corresponding sort option, the option will be chosen.\n\t\t * If a user ungroups, the sorting will be reset to the default sorting.\n\t\t * @class\n\t\t * @public\n\t\t * @param {sap.ui.model.json.JSONModel} oViewModel the model of the current view\n\t\t * @param {function} fnGroupFunction the grouping function to be applied\n\t\t * @alias pizza.model.GroupSortState\n\t\t */\n\t\tconstructor: function (oViewModel, fnGroupFunction) {\n\t\t\tthis._oViewModel = oViewModel;\n\t\t\tthis._fnGroupFunction = fnGroupFunction;\n\t\t},\n\n\t\t/**\n\t\t * Sorts by CustomerName, or by TotalAmount\n\t\t *\n\t\t * @param {string} sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tsort: function (sKey) {\n\t\t\tvar sGroupedBy = this._oViewModel.getProperty(\"/groupBy\");\n\n\t\t\tif (sGroupedBy !== \"None\") {\n\t\t\t\t// If the list is grouped, remove the grouping since the user wants to sort by something different\n\t\t\t\t// Grouping only works if the list is primary sorted by the grouping - the first sorten contains a grouper function\n\t\t\t\tthis._oViewModel.setProperty(\"/groupBy\", \"None\");\n\t\t\t}\n\n\t\t\treturn [new Sorter(sKey, false)];\n\t\t},\n\n\t\t/**\n\t\t * Groups by TotalAmount, or resets the grouping for the key \"None\"\n\t\t *\n\t\t * @param {string} sKey - the key of the field used for grouping\n\t\t * @returns {sap.ui.model.Sorter[]} an array of sorters\n\t\t */\n\t\tgroup: function (sKey) {\n\t\t\tvar aSorters = [];\n\n\t\t\tif (sKey === \"TotalAmount\") {\n\t\t\t\t// Grouping means sorting so we set the select to the same Entity used for grouping\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"TotalAmount\");\n\n\t\t\t\taSorters.push(\n\t\t\t\t\tnew Sorter(\"TotalAmount\", false,\n\t\t\t\t\t\tthis._fnGroupFunction.bind(this))\n\t\t\t\t);\n\t\t\t} else if (sKey === \"None\") {\n\t\t\t\t// select the default sorting again\n\t\t\t\tthis._oViewModel.setProperty(\"/sortBy\", \"CustomerName\");\n\t\t\t}\n\n\t\t\treturn aSorters;\n\t\t}\n\n\t});\n});",
		"pizza/model/models.js": "sap.ui.define([\n\t\t\"sap/ui/model/json/JSONModel\",\n\t\t\"sap/ui/Device\"\n\t], function (JSONModel, Device) {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\tcreateDeviceModel : function () {\n\t\t\t\tvar oModel = new JSONModel(Device);\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t},\n\n\t\t\tcreateFLPModel : function () {\n\t\t\t\tvar fnGetuser = jQuery.sap.getObject(\"sap.ushell.Container.getUser\"),\n\t\t\t\t\tbIsShareInJamActive = fnGetuser ? fnGetuser().isJamActive() : false,\n\t\t\t\t\toModel = new JSONModel({\n\t\t\t\t\t\tisShareInJamActive: bIsShareInJamActive\n\t\t\t\t\t});\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\n\t\t\t\treturn oModel;\n\t\t\t}\n\t\t};\n\n\t}\n);",
		"pizza/model/grouper.js": "sap.ui.define([\n\t], function () {\n\t\t\"use strict\";\n\n\t\t/*\n\t\t * Use this file to implement your custom grouping functions\n\t\t * The predefined functions are simple examples and might be replaced by your more complex implementations\n\t\t * to be called with .bind() and handed over to a sap.ui.model.Sorter\n\t\t * return value for all your functions is an object with  key-text pairs\n\t\t * the oContext parameter is not under your control!\n\t\t */\n\n\t\treturn {\n\n\t\t/**\n\t\t * Groups the items by a price in two groups: Lesser equal than 20 and greater than 20\n\t\t * This grouping function needs the resource bundle so we pass it as a dependency\n\t\t * @param oResourceBundle {sap.ui.model.resource.ResourceModel} the resource bundle of your i18n model\n\t\t * @returns {Function} the grouper function you can pass to your sorter\n\t\t */\n\t\tgroupUnitNumber : function (oResourceBundle) {\n\t\t\treturn function (oContext) {\n\t\t\t\tvar iPrice = oContext.getProperty(\"TotalAmount\"),\n\t\t\t\t\tsKey,\n\t\t\t\t\tsText;\n\n\t\t\t\t\tif (iPrice <= 20) {\n\t\t\t\t\t\tsKey = \"LE20\";\n\t\t\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header1\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsKey = \"GT20\";\n\t\t\t\t\t\tsText = oResourceBundle.getText(\"masterGroup1Header2\");\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tkey: sKey,\n\t\t\t\t\t\ttext: sText\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t};\n\t}\n);",
		"pizza/model/formatter.js": "sap.ui.define([\n\t], function () {\n\t\t\"use strict\";\n\n\t\treturn {\n\t\t\t/**\n\t\t\t * Rounds the currency value to 2 digits\n\t\t\t *\n\t\t\t * @public\n\t\t\t * @param {string} sValue value to be formatted\n\t\t\t * @returns {string} formatted currency value with 2 digits\n\t\t\t */\n\t\t\tcurrencyValue : function (sValue) {\n\t\t\t\tif (!sValue) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\treturn parseFloat(sValue).toFixed(2);\n\t\t\t}\n\t\t};\n\n\t}\n);"
	}
});